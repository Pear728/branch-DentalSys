{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'DoctorAppointments',\n  data() {\n    return {\n      activeTab: 'today',\n      loading: false,\n      submitLoading: false,\n      allAppointments: [],\n      filterForm: {\n        dateRange: null,\n        status: null\n      },\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      patientList: [],\n      // 录入病历相关\n      medicalRecordDialogVisible: false,\n      viewRecordDialogVisible: false,\n      currentAppointment: null,\n      currentPatientName: '',\n      currentRecord: null,\n      medicalRecordForm: {\n        appointmentId: null,\n        patientId: null,\n        doctorId: null,\n        visitDate: null,\n        chiefComplaint: '',\n        diagnosis: '',\n        treatmentPlan: '',\n        prescription: '',\n        examinationAdvice: '',\n        precautions: '',\n        followUpPlan: ''\n      },\n      medicalRecordRules: {\n        visitDate: [{\n          required: true,\n          message: '请选择就诊时间',\n          trigger: 'change'\n        }],\n        chiefComplaint: [{\n          required: true,\n          message: '请输入患者主诉',\n          trigger: 'blur'\n        }],\n        diagnosis: [{\n          required: true,\n          message: '请输入诊断结果',\n          trigger: 'blur'\n        }],\n        treatmentPlan: [{\n          required: true,\n          message: '请输入治疗方案',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    // 今日预约\n    todayAppointments() {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return this.allAppointments.filter(item => {\n        const appointmentTime = new Date(item.appointmentTime);\n        return appointmentTime >= today && appointmentTime < tomorrow;\n      });\n    },\n    // 筛选后的预约\n    filteredAppointments() {\n      let result = [...this.allAppointments];\n\n      // 按日期范围筛选\n      if (this.filterForm.dateRange && this.filterForm.dateRange.length === 2) {\n        const startDate = new Date(this.filterForm.dateRange[0]);\n        startDate.setHours(0, 0, 0, 0);\n        const endDate = new Date(this.filterForm.dateRange[1]);\n        endDate.setHours(23, 59, 59, 999);\n        result = result.filter(item => {\n          const appointmentTime = new Date(item.appointmentTime);\n          return appointmentTime >= startDate && appointmentTime <= endDate;\n        });\n      }\n\n      // 按状态筛选\n      if (this.filterForm.status !== null) {\n        result = result.filter(item => item.status === this.filterForm.status);\n      }\n\n      // 计算总数\n      this.total = result.length;\n\n      // 分页\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return result.slice(start, end);\n    }\n  },\n  mounted() {\n    this.fetchPatients();\n    this.fetchAppointments();\n  },\n  methods: {\n    // 获取患者列表\n    fetchPatients() {\n      this.$http.get('/user/search?role=1').then(response => {\n        if (response.data.code === 200) {\n          this.patientList = response.data.data;\n        }\n      }).catch(error => {\n        console.error('获取患者列表错误:', error);\n      });\n    },\n    // 获取预约列表\n    fetchAppointments() {\n      this.loading = true;\n      this.$http.get(`/appointment/doctor/${this.currentUser.id}`).then(response => {\n        if (response.data.code === 200) {\n          // 处理预约数据，添加患者信息\n          this.allAppointments = response.data.data.map(item => {\n            const patient = this.patientList.find(p => p.id === item.patientId);\n            return {\n              ...item,\n              patientName: patient ? patient.realName : `患者(ID:${item.patientId})`,\n              patientPhone: patient ? patient.phone : null\n            };\n          });\n\n          // 按预约时间排序（降序）\n          this.allAppointments.sort((a, b) => {\n            return new Date(b.appointmentTime) - new Date(a.appointmentTime);\n          });\n        }\n      }).catch(error => {\n        console.error('获取预约列表错误:', error);\n        this.$message.error('获取预约列表失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 确认预约\n    confirmAppointment(appointment) {\n      this.$confirm('确定要确认此预约吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(() => {\n        this.$http.put(`/appointment/${appointment.id}/status/1`).then(response => {\n          if (response.data.code === 200) {\n            this.$message.success('预约已确认');\n            // 更新预约状态\n            appointment.status = 1;\n          } else {\n            this.$message.error(response.data.message || '确认预约失败');\n          }\n        }).catch(error => {\n          console.error('确认预约错误:', error);\n          this.$message.error('确认预约失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 取消操作，不做处理\n      });\n    },\n    // 取消预约\n    cancelAppointment(appointment) {\n      this.$confirm('确定要取消此预约吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.put(`/appointment/${appointment.id}/cancel`).then(response => {\n          if (response.data.code === 200) {\n            this.$message.success('预约已取消');\n            // 更新预约状态\n            appointment.status = 3;\n          } else {\n            this.$message.error(response.data.message || '取消预约失败');\n          }\n        }).catch(error => {\n          console.error('取消预约错误:', error);\n          this.$message.error('取消预约失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 取消操作，不做处理\n      });\n    },\n    // 录入病历\n    createMedicalRecord(appointment) {\n      this.currentAppointment = appointment;\n      const patient = this.patientList.find(p => p.id === appointment.patientId);\n      this.currentPatientName = patient ? patient.realName : `患者(ID:${appointment.patientId})`;\n\n      // 初始化表单\n      this.medicalRecordForm = {\n        appointmentId: appointment.id,\n        patientId: appointment.patientId,\n        doctorId: this.currentUser.id,\n        visitDate: new Date(),\n        chiefComplaint: appointment.symptomDesc || '',\n        diagnosis: '',\n        treatmentPlan: '',\n        prescription: '',\n        examinationAdvice: '',\n        precautions: '',\n        followUpPlan: ''\n      };\n      this.medicalRecordDialogVisible = true;\n    },\n    // 提交病历\n    submitMedicalRecord() {\n      this.$refs.medicalRecordForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          this.$http.post('/medical-record', this.medicalRecordForm).then(response => {\n            if (response.data.code === 200) {\n              this.$message.success('病历提交成功');\n              this.medicalRecordDialogVisible = false;\n\n              // 更新预约状态为已完成\n              this.currentAppointment.status = 2;\n            } else {\n              this.$message.error(response.data.message || '病历提交失败');\n            }\n          }).catch(error => {\n            console.error('提交病历错误:', error);\n            this.$message.error('病历提交失败，请稍后重试');\n          }).finally(() => {\n            this.submitLoading = false;\n          });\n        }\n      });\n    },\n    // 查看病历\n    viewMedicalRecord(appointment) {\n      this.$http.get(`/medical-record/appointment/${appointment.id}`).then(response => {\n        if (response.data.code === 200) {\n          this.currentRecord = response.data.data;\n          const patient = this.patientList.find(p => p.id === appointment.patientId);\n          this.currentPatientName = patient ? patient.realName : `患者(ID:${appointment.patientId})`;\n          this.viewRecordDialogVisible = true;\n        } else {\n          this.$message.error(response.data.message || '获取病历失败');\n        }\n      }).catch(error => {\n        console.error('获取病历错误:', error);\n        this.$message.error('获取病历失败，请稍后重试');\n      });\n    },\n    // 打印病历\n    printRecord() {\n      this.$message.success('打印功能已触发，请检查打印机状态');\n\n      // 这里可以实现实际的打印功能，类似患者端病历打印的实现\n    },\n    // 刷新预约列表\n    refreshAppointments() {\n      this.fetchAppointments();\n    },\n    // 处理日期变更\n    handleDateChange() {\n      this.handleFilterChange();\n    },\n    // 处理筛选条件变更\n    handleFilterChange() {\n      this.currentPage = 1;\n    },\n    // 重置筛选条件\n    resetFilter() {\n      this.filterForm = {\n        dateRange: null,\n        status: null\n      };\n      this.handleFilterChange();\n    },\n    // 处理分页变更\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n    // 处理标签页切换\n    handleTabClick() {\n      // 切换到全部预约时，重置筛选条件\n      if (this.activeTab === 'all') {\n        this.resetFilter();\n      }\n    },\n    // 格式化日期时间\n    formatDateTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      switch (status) {\n        case 0:\n          return '待确认';\n        case 1:\n          return '已确认';\n        case 2:\n          return '已完成';\n        case 3:\n          return '已取消';\n        default:\n          return '未知状态';\n      }\n    },\n    // 获取状态类型（用于标签颜色）\n    getStatusType(status) {\n      switch (status) {\n        case 0:\n          return 'warning';\n        case 1:\n          return 'primary';\n        case 2:\n          return 'success';\n        case 3:\n          return 'danger';\n        default:\n          return 'info';\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","activeTab","loading","submitLoading","allAppointments","filterForm","dateRange","status","currentPage","pageSize","total","patientList","medicalRecordDialogVisible","viewRecordDialogVisible","currentAppointment","currentPatientName","currentRecord","medicalRecordForm","appointmentId","patientId","doctorId","visitDate","chiefComplaint","diagnosis","treatmentPlan","prescription","examinationAdvice","precautions","followUpPlan","medicalRecordRules","required","message","trigger","computed","todayAppointments","today","Date","setHours","tomorrow","setDate","getDate","filter","item","appointmentTime","filteredAppointments","result","length","startDate","endDate","start","end","slice","mounted","fetchPatients","fetchAppointments","methods","$http","get","then","response","code","catch","error","console","currentUser","id","map","patient","find","p","patientName","realName","patientPhone","phone","sort","a","b","$message","finally","confirmAppointment","appointment","$confirm","confirmButtonText","cancelButtonText","type","put","success","cancelAppointment","createMedicalRecord","symptomDesc","submitMedicalRecord","$refs","validate","valid","post","viewMedicalRecord","printRecord","refreshAppointments","handleDateChange","handleFilterChange","resetFilter","handleCurrentChange","page","handleTabClick","formatDateTime","dateString","date","getFullYear","getMonth","toString","padStart","getHours","getMinutes","getStatusText","getStatusType"],"sources":["src/views/doctor/Appointments.vue"],"sourcesContent":["<template>\n  <div class=\"appointments-container\">\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n        <el-form-item label=\"日期范围\">\n          <el-date-picker\n            v-model=\"filterForm.dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            value-format=\"yyyy-MM-dd\"\n            @change=\"handleDateChange\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"filterForm.status\" placeholder=\"请选择状态\" clearable @change=\"handleFilterChange\">\n            <el-option label=\"待确认\" :value=\"0\"></el-option>\n            <el-option label=\"已确认\" :value=\"1\"></el-option>\n            <el-option label=\"已完成\" :value=\"2\"></el-option>\n            <el-option label=\"已取消\" :value=\"3\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleFilterChange\">查询</el-button>\n          <el-button @click=\"resetFilter\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n      <el-tab-pane label=\"今日预约\" name=\"today\">\n        <el-card class=\"appointments-card\">\n          <div slot=\"header\">\n            <span>今日预约列表</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"refreshAppointments\">\n              <i class=\"el-icon-refresh\"></i> 刷新\n            </el-button>\n          </div>\n          \n          <el-table\n            :data=\"todayAppointments\"\n            v-loading=\"loading\"\n            border\n            style=\"width: 100%\">\n            <el-table-column prop=\"id\" label=\"预约号\" width=\"80\"></el-table-column>\n            <el-table-column prop=\"patientName\" label=\"患者姓名\" width=\"120\"></el-table-column>\n            <el-table-column label=\"联系方式\" width=\"120\">\n              <template slot-scope=\"scope\">\n                {{ scope.row.patientPhone || '无' }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"appointmentTime\" label=\"预约时间\" width=\"180\">\n              <template slot-scope=\"scope\">\n                {{ formatDateTime(scope.row.appointmentTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"treatmentItem\" label=\"就诊项目\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"symptomDesc\" label=\"症状描述\" width=\"200\">\n              <template slot-scope=\"scope\">\n                <el-tooltip v-if=\"scope.row.symptomDesc\" :content=\"scope.row.symptomDesc\" placement=\"top\">\n                  <div class=\"ellipsis\">{{ scope.row.symptomDesc }}</div>\n                </el-tooltip>\n                <span v-else>无</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">\n                  {{ getStatusText(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"isPaid\" label=\"支付状态\" width=\"100\">\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"scope.row.isPaid === 1 ? 'success' : 'danger'\">\n                  {{ scope.row.isPaid === 1 ? '已支付' : '未支付' }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"primary\"\n                  v-if=\"scope.row.status === 0\"\n                  @click=\"confirmAppointment(scope.row)\">确认</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"success\"\n                  v-if=\"scope.row.status === 1\"\n                  @click=\"createMedicalRecord(scope.row)\">录入病历</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"info\"\n                  v-if=\"scope.row.status === 2\"\n                  @click=\"viewMedicalRecord(scope.row)\">查看病历</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  v-if=\"scope.row.status === 0 || scope.row.status === 1\"\n                  @click=\"cancelAppointment(scope.row)\">取消</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"全部预约\" name=\"all\">\n        <el-card class=\"appointments-card\">\n          <div slot=\"header\">\n            <span>预约列表</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"refreshAppointments\">\n              <i class=\"el-icon-refresh\"></i> 刷新\n            </el-button>\n          </div>\n          \n          <el-table\n            :data=\"filteredAppointments\"\n            v-loading=\"loading\"\n            border\n            style=\"width: 100%\">\n            <el-table-column prop=\"id\" label=\"预约号\" width=\"80\"></el-table-column>\n            <el-table-column prop=\"patientName\" label=\"患者姓名\" width=\"120\"></el-table-column>\n            <el-table-column label=\"联系方式\" width=\"120\">\n              <template slot-scope=\"scope\">\n                {{ scope.row.patientPhone || '无' }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"appointmentTime\" label=\"预约时间\" width=\"180\">\n              <template slot-scope=\"scope\">\n                {{ formatDateTime(scope.row.appointmentTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"treatmentItem\" label=\"就诊项目\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"symptomDesc\" label=\"症状描述\" width=\"200\">\n              <template slot-scope=\"scope\">\n                <el-tooltip v-if=\"scope.row.symptomDesc\" :content=\"scope.row.symptomDesc\" placement=\"top\">\n                  <div class=\"ellipsis\">{{ scope.row.symptomDesc }}</div>\n                </el-tooltip>\n                <span v-else>无</span>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">\n                  {{ getStatusText(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"isPaid\" label=\"支付状态\" width=\"100\">\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"scope.row.isPaid === 1 ? 'success' : 'danger'\">\n                  {{ scope.row.isPaid === 1 ? '已支付' : '未支付' }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"primary\"\n                  v-if=\"scope.row.status === 0\"\n                  @click=\"confirmAppointment(scope.row)\">确认</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"success\"\n                  v-if=\"scope.row.status === 1\"\n                  @click=\"createMedicalRecord(scope.row)\">录入病历</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"info\"\n                  v-if=\"scope.row.status === 2\"\n                  @click=\"viewMedicalRecord(scope.row)\">查看病历</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  v-if=\"scope.row.status === 0 || scope.row.status === 1\"\n                  @click=\"cancelAppointment(scope.row)\">取消</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"pagination-container\">\n            <el-pagination\n              @current-change=\"handleCurrentChange\"\n              :current-page.sync=\"currentPage\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n            </el-pagination>\n          </div>\n        </el-card>\n      </el-tab-pane>\n    </el-tabs>\n    \n    <!-- 录入病历对话框 -->\n    <el-dialog title=\"录入病历\" :visible.sync=\"medicalRecordDialogVisible\" width=\"70%\" :close-on-click-modal=\"false\">\n      <el-form :model=\"medicalRecordForm\" :rules=\"medicalRecordRules\" ref=\"medicalRecordForm\" label-width=\"100px\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"患者姓名\">\n              <el-input v-model=\"currentPatientName\" disabled></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"就诊时间\" prop=\"visitDate\">\n              <el-date-picker\n                v-model=\"medicalRecordForm.visitDate\"\n                type=\"datetime\"\n                placeholder=\"选择就诊时间\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        \n        <el-form-item label=\"主诉\" prop=\"chiefComplaint\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.chiefComplaint\"\n            placeholder=\"请输入患者主诉\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"诊断结果\" prop=\"diagnosis\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.diagnosis\"\n            placeholder=\"请输入诊断结果\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"治疗方案\" prop=\"treatmentPlan\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.treatmentPlan\"\n            placeholder=\"请输入治疗方案\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"处方\" prop=\"prescription\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.prescription\"\n            placeholder=\"请输入处方\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"检查建议\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.examinationAdvice\"\n            placeholder=\"请输入检查建议\"\n            :rows=\"2\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"注意事项\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.precautions\"\n            placeholder=\"请输入注意事项\"\n            :rows=\"2\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"随访计划\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"medicalRecordForm.followUpPlan\"\n            placeholder=\"请输入随访计划\"\n            :rows=\"2\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"medicalRecordDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitMedicalRecord\" :loading=\"submitLoading\">提交</el-button>\n      </span>\n    </el-dialog>\n    \n    <!-- 查看病历对话框 -->\n    <el-dialog title=\"病历详情\" :visible.sync=\"viewRecordDialogVisible\" width=\"70%\">\n      <div v-if=\"currentRecord\" class=\"record-detail\">\n        <el-descriptions title=\"基本信息\" :column=\"2\" border>\n          <el-descriptions-item label=\"病历号\">{{ currentRecord.id }}</el-descriptions-item>\n          <el-descriptions-item label=\"就诊医生\">{{ currentUser.realName }}</el-descriptions-item>\n          <el-descriptions-item label=\"就诊日期\">{{ formatDateTime(currentRecord.visitDate) }}</el-descriptions-item>\n          <el-descriptions-item label=\"患者姓名\">{{ currentPatientName }}</el-descriptions-item>\n        </el-descriptions>\n        \n        <el-divider></el-divider>\n        \n        <el-descriptions title=\"诊断信息\" :column=\"1\" border>\n          <el-descriptions-item label=\"主诉\">{{ currentRecord.chiefComplaint || '无' }}</el-descriptions-item>\n          <el-descriptions-item label=\"诊断结果\">{{ currentRecord.diagnosis || '无' }}</el-descriptions-item>\n          <el-descriptions-item label=\"治疗方案\">{{ currentRecord.treatmentPlan || '无' }}</el-descriptions-item>\n          <el-descriptions-item label=\"处方\">{{ currentRecord.prescription || '无' }}</el-descriptions-item>\n          <el-descriptions-item label=\"检查建议\">{{ currentRecord.examinationAdvice || '无' }}</el-descriptions-item>\n          <el-descriptions-item label=\"注意事项\">{{ currentRecord.precautions || '无' }}</el-descriptions-item>\n          <el-descriptions-item label=\"随访计划\">{{ currentRecord.followUpPlan || '无' }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"printRecord\">打印</el-button>\n        <el-button @click=\"viewRecordDialogVisible = false\">关闭</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'DoctorAppointments',\n  data() {\n    return {\n      activeTab: 'today',\n      loading: false,\n      submitLoading: false,\n      allAppointments: [],\n      filterForm: {\n        dateRange: null,\n        status: null\n      },\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      patientList: [],\n      \n      // 录入病历相关\n      medicalRecordDialogVisible: false,\n      viewRecordDialogVisible: false,\n      currentAppointment: null,\n      currentPatientName: '',\n      currentRecord: null,\n      medicalRecordForm: {\n        appointmentId: null,\n        patientId: null,\n        doctorId: null,\n        visitDate: null,\n        chiefComplaint: '',\n        diagnosis: '',\n        treatmentPlan: '',\n        prescription: '',\n        examinationAdvice: '',\n        precautions: '',\n        followUpPlan: ''\n      },\n      medicalRecordRules: {\n        visitDate: [\n          { required: true, message: '请选择就诊时间', trigger: 'change' }\n        ],\n        chiefComplaint: [\n          { required: true, message: '请输入患者主诉', trigger: 'blur' }\n        ],\n        diagnosis: [\n          { required: true, message: '请输入诊断结果', trigger: 'blur' }\n        ],\n        treatmentPlan: [\n          { required: true, message: '请输入治疗方案', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    \n    // 今日预约\n    todayAppointments() {\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n      const tomorrow = new Date(today)\n      tomorrow.setDate(tomorrow.getDate() + 1)\n      \n      return this.allAppointments.filter(item => {\n        const appointmentTime = new Date(item.appointmentTime)\n        return appointmentTime >= today && appointmentTime < tomorrow\n      })\n    },\n    \n    // 筛选后的预约\n    filteredAppointments() {\n      let result = [...this.allAppointments]\n      \n      // 按日期范围筛选\n      if (this.filterForm.dateRange && this.filterForm.dateRange.length === 2) {\n        const startDate = new Date(this.filterForm.dateRange[0])\n        startDate.setHours(0, 0, 0, 0)\n        \n        const endDate = new Date(this.filterForm.dateRange[1])\n        endDate.setHours(23, 59, 59, 999)\n        \n        result = result.filter(item => {\n          const appointmentTime = new Date(item.appointmentTime)\n          return appointmentTime >= startDate && appointmentTime <= endDate\n        })\n      }\n      \n      // 按状态筛选\n      if (this.filterForm.status !== null) {\n        result = result.filter(item => item.status === this.filterForm.status)\n      }\n      \n      // 计算总数\n      this.total = result.length\n      \n      // 分页\n      const start = (this.currentPage - 1) * this.pageSize\n      const end = start + this.pageSize\n      \n      return result.slice(start, end)\n    }\n  },\n  mounted() {\n    this.fetchPatients()\n    this.fetchAppointments()\n  },\n  methods: {\n    // 获取患者列表\n    fetchPatients() {\n      this.$http.get('/user/search?role=1')\n        .then(response => {\n          if (response.data.code === 200) {\n            this.patientList = response.data.data\n          }\n        })\n        .catch(error => {\n          console.error('获取患者列表错误:', error)\n        })\n    },\n    \n    // 获取预约列表\n    fetchAppointments() {\n      this.loading = true\n      this.$http.get(`/appointment/doctor/${this.currentUser.id}`)\n        .then(response => {\n          if (response.data.code === 200) {\n            // 处理预约数据，添加患者信息\n            this.allAppointments = response.data.data.map(item => {\n              const patient = this.patientList.find(p => p.id === item.patientId)\n              return {\n                ...item,\n                patientName: patient ? patient.realName : `患者(ID:${item.patientId})`,\n                patientPhone: patient ? patient.phone : null\n              }\n            })\n            \n            // 按预约时间排序（降序）\n            this.allAppointments.sort((a, b) => {\n              return new Date(b.appointmentTime) - new Date(a.appointmentTime)\n            })\n          }\n        })\n        .catch(error => {\n          console.error('获取预约列表错误:', error)\n          this.$message.error('获取预约列表失败，请稍后重试')\n        })\n        .finally(() => {\n          this.loading = false\n        })\n    },\n    \n    // 确认预约\n    confirmAppointment(appointment) {\n      this.$confirm('确定要确认此预约吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(() => {\n        this.$http.put(`/appointment/${appointment.id}/status/1`)\n          .then(response => {\n            if (response.data.code === 200) {\n              this.$message.success('预约已确认')\n              // 更新预约状态\n              appointment.status = 1\n            } else {\n              this.$message.error(response.data.message || '确认预约失败')\n            }\n          })\n          .catch(error => {\n            console.error('确认预约错误:', error)\n            this.$message.error('确认预约失败，请稍后重试')\n          })\n      }).catch(() => {\n        // 取消操作，不做处理\n      })\n    },\n    \n    // 取消预约\n    cancelAppointment(appointment) {\n      this.$confirm('确定要取消此预约吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$http.put(`/appointment/${appointment.id}/cancel`)\n          .then(response => {\n            if (response.data.code === 200) {\n              this.$message.success('预约已取消')\n              // 更新预约状态\n              appointment.status = 3\n            } else {\n              this.$message.error(response.data.message || '取消预约失败')\n            }\n          })\n          .catch(error => {\n            console.error('取消预约错误:', error)\n            this.$message.error('取消预约失败，请稍后重试')\n          })\n      }).catch(() => {\n        // 取消操作，不做处理\n      })\n    },\n    \n    // 录入病历\n    createMedicalRecord(appointment) {\n      this.currentAppointment = appointment\n      const patient = this.patientList.find(p => p.id === appointment.patientId)\n      this.currentPatientName = patient ? patient.realName : `患者(ID:${appointment.patientId})`\n      \n      // 初始化表单\n      this.medicalRecordForm = {\n        appointmentId: appointment.id,\n        patientId: appointment.patientId,\n        doctorId: this.currentUser.id,\n        visitDate: new Date(),\n        chiefComplaint: appointment.symptomDesc || '',\n        diagnosis: '',\n        treatmentPlan: '',\n        prescription: '',\n        examinationAdvice: '',\n        precautions: '',\n        followUpPlan: ''\n      }\n      \n      this.medicalRecordDialogVisible = true\n    },\n    \n    // 提交病历\n    submitMedicalRecord() {\n      this.$refs.medicalRecordForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true\n          \n          this.$http.post('/medical-record', this.medicalRecordForm)\n            .then(response => {\n              if (response.data.code === 200) {\n                this.$message.success('病历提交成功')\n                this.medicalRecordDialogVisible = false\n                \n                // 更新预约状态为已完成\n                this.currentAppointment.status = 2\n              } else {\n                this.$message.error(response.data.message || '病历提交失败')\n              }\n            })\n            .catch(error => {\n              console.error('提交病历错误:', error)\n              this.$message.error('病历提交失败，请稍后重试')\n            })\n            .finally(() => {\n              this.submitLoading = false\n            })\n        }\n      })\n    },\n    \n    // 查看病历\n    viewMedicalRecord(appointment) {\n      this.$http.get(`/medical-record/appointment/${appointment.id}`)\n        .then(response => {\n          if (response.data.code === 200) {\n            this.currentRecord = response.data.data\n            const patient = this.patientList.find(p => p.id === appointment.patientId)\n            this.currentPatientName = patient ? patient.realName : `患者(ID:${appointment.patientId})`\n            this.viewRecordDialogVisible = true\n          } else {\n            this.$message.error(response.data.message || '获取病历失败')\n          }\n        })\n        .catch(error => {\n          console.error('获取病历错误:', error)\n          this.$message.error('获取病历失败，请稍后重试')\n        })\n    },\n    \n    // 打印病历\n    printRecord() {\n      this.$message.success('打印功能已触发，请检查打印机状态')\n      \n      // 这里可以实现实际的打印功能，类似患者端病历打印的实现\n    },\n    \n    // 刷新预约列表\n    refreshAppointments() {\n      this.fetchAppointments()\n    },\n    \n    // 处理日期变更\n    handleDateChange() {\n      this.handleFilterChange()\n    },\n    \n    // 处理筛选条件变更\n    handleFilterChange() {\n      this.currentPage = 1\n    },\n    \n    // 重置筛选条件\n    resetFilter() {\n      this.filterForm = {\n        dateRange: null,\n        status: null\n      }\n      this.handleFilterChange()\n    },\n    \n    // 处理分页变更\n    handleCurrentChange(page) {\n      this.currentPage = page\n    },\n    \n    // 处理标签页切换\n    handleTabClick() {\n      // 切换到全部预约时，重置筛选条件\n      if (this.activeTab === 'all') {\n        this.resetFilter()\n      }\n    },\n    \n    // 格式化日期时间\n    formatDateTime(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n    \n    // 获取状态文本\n    getStatusText(status) {\n      switch (status) {\n        case 0: return '待确认'\n        case 1: return '已确认'\n        case 2: return '已完成'\n        case 3: return '已取消'\n        default: return '未知状态'\n      }\n    },\n    \n    // 获取状态类型（用于标签颜色）\n    getStatusType(status) {\n      switch (status) {\n        case 0: return 'warning'\n        case 1: return 'primary'\n        case 2: return 'success'\n        case 3: return 'danger'\n        default: return 'info'\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.appointments-container {\n  height: 100%;\n}\n\n.filter-card,\n.appointments-card {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.record-detail {\n  padding: 0 20px;\n}\n\n.el-descriptions {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}