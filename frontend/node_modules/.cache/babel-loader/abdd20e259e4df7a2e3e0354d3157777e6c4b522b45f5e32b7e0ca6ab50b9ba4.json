{"ast":null,"code":"/**\r\n * XSS攻击检测与防御工具类\r\n */\n\n// 常见XSS向量示例\nexport const xssVectors = [{\n  name: '基本脚本',\n  payload: '<script>alert(\"XSS\")</script>',\n  type: 'reflected'\n}, {\n  name: '图片标签事件',\n  payload: '<img src=\"x\" onerror=\"alert(\\'XSS\\')\">',\n  type: 'dom'\n}, {\n  name: '链接JavaScript伪协议',\n  payload: '<a href=\"javascript:alert(\\'XSS\\')\">点击我</a>',\n  type: 'dom'\n}, {\n  name: 'CSS表达式',\n  payload: '<div style=\"background-image: url(javascript:alert(\\'XSS\\'))\"></div>',\n  type: 'reflected'\n}, {\n  name: '内联事件监听器',\n  payload: '<body onload=\"alert(\\'XSS\\')\"></body>',\n  type: 'dom'\n}];\n\n// 检测字符串中的潜在XSS载荷\nexport const detectXssPayload = input => {\n  if (!input || typeof input !== 'string') return false;\n\n  // 定义可能触发XSS的模式\n  const patterns = [/<script\\b[^>]*>(.*?)<\\/script>/i, /javascript\\s*:/i, /on\\w+\\s*=/i, /<\\s*img[^>]+onerror\\s*=/i, /<\\s*iframe/i, /<\\s*embed/i, /<\\s*object/i, /data\\s*:/i, /document\\.cookie/i, /document\\.location/i, /eval\\s*\\(/i, /document\\.write/i, /innerHTML/i, /fromCharCode/i];\n\n  // 检查是否匹配任何一种模式\n  return patterns.some(pattern => pattern.test(input));\n};\n\n// 分析XSS有效载荷的危险等级\nexport const analyzeXssSeverity = payload => {\n  if (!payload) return 'low';\n  const severePatterns = [/document\\.cookie/i, /localStorage/i, /sessionStorage/i, /\\.src\\s*=/i, /xhr\\.open/i, /fetch\\s*\\(/i, /new\\s+XMLHttpRequest/i];\n  const mediumPatterns = [/<script/i, /eval\\s*\\(/i, /document\\.write/i, /innerHTML/i];\n  if (severePatterns.some(pattern => pattern.test(payload))) {\n    return 'high';\n  } else if (mediumPatterns.some(pattern => pattern.test(payload))) {\n    return 'medium';\n  } else {\n    return 'low';\n  }\n};\n\n// 解析CSP策略字符串\nexport const parseCspPolicy = policyString => {\n  if (!policyString) return {};\n  const result = {};\n  const directives = policyString.split(';').map(dir => dir.trim());\n  directives.forEach(directive => {\n    if (directive) {\n      const [key, ...values] = directive.split(/\\s+/);\n      result[key] = values;\n    }\n  });\n  return result;\n};","map":{"version":3,"names":["xssVectors","name","payload","type","detectXssPayload","input","patterns","some","pattern","test","analyzeXssSeverity","severePatterns","mediumPatterns","parseCspPolicy","policyString","result","directives","split","map","dir","trim","forEach","directive","key","values"],"sources":["D:/Desktop/AI接单项目/进行中/20250321-WX-WEB-01/工作文件/xss-defense-system/frontend/src/utils/xssUtils.js"],"sourcesContent":["/**\r\n * XSS攻击检测与防御工具类\r\n */\r\n\r\n// 常见XSS向量示例\r\nexport const xssVectors = [\r\n  {\r\n    name: '基本脚本',\r\n    payload: '<script>alert(\"XSS\")</script>',\r\n    type: 'reflected'\r\n  },\r\n  {\r\n    name: '图片标签事件',\r\n    payload: '<img src=\"x\" onerror=\"alert(\\'XSS\\')\">',\r\n    type: 'dom'\r\n  },\r\n  {\r\n    name: '链接JavaScript伪协议',\r\n    payload: '<a href=\"javascript:alert(\\'XSS\\')\">点击我</a>',\r\n    type: 'dom'\r\n  },\r\n  {\r\n    name: 'CSS表达式',\r\n    payload: '<div style=\"background-image: url(javascript:alert(\\'XSS\\'))\"></div>',\r\n    type: 'reflected'\r\n  },\r\n  {\r\n    name: '内联事件监听器',\r\n    payload: '<body onload=\"alert(\\'XSS\\')\"></body>',\r\n    type: 'dom'\r\n  }\r\n];\r\n\r\n// 检测字符串中的潜在XSS载荷\r\nexport const detectXssPayload = (input) => {\r\n  if (!input || typeof input !== 'string') return false;\r\n  \r\n  // 定义可能触发XSS的模式\r\n  const patterns = [\r\n    /<script\\b[^>]*>(.*?)<\\/script>/i,\r\n    /javascript\\s*:/i,\r\n    /on\\w+\\s*=/i,\r\n    /<\\s*img[^>]+onerror\\s*=/i,\r\n    /<\\s*iframe/i,\r\n    /<\\s*embed/i,\r\n    /<\\s*object/i,\r\n    /data\\s*:/i,\r\n    /document\\.cookie/i,\r\n    /document\\.location/i,\r\n    /eval\\s*\\(/i,\r\n    /document\\.write/i,\r\n    /innerHTML/i,\r\n    /fromCharCode/i\r\n  ];\r\n  \r\n  // 检查是否匹配任何一种模式\r\n  return patterns.some(pattern => pattern.test(input));\r\n};\r\n\r\n// 分析XSS有效载荷的危险等级\r\nexport const analyzeXssSeverity = (payload) => {\r\n  if (!payload) return 'low';\r\n  \r\n  const severePatterns = [\r\n    /document\\.cookie/i,\r\n    /localStorage/i, \r\n    /sessionStorage/i,\r\n    /\\.src\\s*=/i,\r\n    /xhr\\.open/i,\r\n    /fetch\\s*\\(/i,\r\n    /new\\s+XMLHttpRequest/i\r\n  ];\r\n  \r\n  const mediumPatterns = [\r\n    /<script/i,\r\n    /eval\\s*\\(/i,\r\n    /document\\.write/i,\r\n    /innerHTML/i\r\n  ];\r\n  \r\n  if (severePatterns.some(pattern => pattern.test(payload))) {\r\n    return 'high';\r\n  } else if (mediumPatterns.some(pattern => pattern.test(payload))) {\r\n    return 'medium';\r\n  } else {\r\n    return 'low';\r\n  }\r\n};\r\n\r\n// 解析CSP策略字符串\r\nexport const parseCspPolicy = (policyString) => {\r\n  if (!policyString) return {};\r\n  \r\n  const result = {};\r\n  const directives = policyString.split(';').map(dir => dir.trim());\r\n  \r\n  directives.forEach(directive => {\r\n    if (directive) {\r\n      const [key, ...values] = directive.split(/\\s+/);\r\n      result[key] = values;\r\n    }\r\n  });\r\n  \r\n  return result;\r\n}; "],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,UAAU,GAAG,CACxB;EACEC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,+BAA+B;EACxCC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,wCAAwC;EACjDC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,IAAI,EAAE,iBAAiB;EACvBC,OAAO,EAAE,6CAA6C;EACtDC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,sEAAsE;EAC/EC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,uCAAuC;EAChDC,IAAI,EAAE;AACR,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EACzC,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAO,KAAK;;EAErD;EACA,MAAMC,QAAQ,GAAG,CACf,iCAAiC,EACjC,iBAAiB,EACjB,YAAY,EACZ,0BAA0B,EAC1B,aAAa,EACb,YAAY,EACZ,aAAa,EACb,WAAW,EACX,mBAAmB,EACnB,qBAAqB,EACrB,YAAY,EACZ,kBAAkB,EAClB,YAAY,EACZ,eAAe,CAChB;;EAED;EACA,OAAOA,QAAQ,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACJ,KAAK,CAAC,CAAC;AACtD,CAAC;;AAED;AACA,OAAO,MAAMK,kBAAkB,GAAIR,OAAO,IAAK;EAC7C,IAAI,CAACA,OAAO,EAAE,OAAO,KAAK;EAE1B,MAAMS,cAAc,GAAG,CACrB,mBAAmB,EACnB,eAAe,EACf,iBAAiB,EACjB,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,uBAAuB,CACxB;EAED,MAAMC,cAAc,GAAG,CACrB,UAAU,EACV,YAAY,EACZ,kBAAkB,EAClB,YAAY,CACb;EAED,IAAID,cAAc,CAACJ,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACP,OAAO,CAAC,CAAC,EAAE;IACzD,OAAO,MAAM;EACf,CAAC,MAAM,IAAIU,cAAc,CAACL,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACP,OAAO,CAAC,CAAC,EAAE;IAChE,OAAO,QAAQ;EACjB,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAIC,YAAY,IAAK;EAC9C,IAAI,CAACA,YAAY,EAAE,OAAO,CAAC,CAAC;EAE5B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,UAAU,GAAGF,YAAY,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAEjEJ,UAAU,CAACK,OAAO,CAACC,SAAS,IAAI;IAC9B,IAAIA,SAAS,EAAE;MACb,MAAM,CAACC,GAAG,EAAE,GAAGC,MAAM,CAAC,GAAGF,SAAS,CAACL,KAAK,CAAC,KAAK,CAAC;MAC/CF,MAAM,CAACQ,GAAG,CAAC,GAAGC,MAAM;IACtB;EACF,CAAC,CAAC;EAEF,OAAOT,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}