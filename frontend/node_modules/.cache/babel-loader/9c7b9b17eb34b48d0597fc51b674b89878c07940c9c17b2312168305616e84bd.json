{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'DoctorMedicalRecords',\n  data() {\n    return {\n      loading: false,\n      submitLoading: false,\n      allRecords: [],\n      filterForm: {\n        dateRange: null,\n        patientName: ''\n      },\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      // 查看/编辑病历\n      recordDialogVisible: false,\n      dialogType: 'view',\n      // 'view' 或 'edit'\n      currentPatientName: '',\n      recordForm: {\n        id: null,\n        appointmentId: null,\n        patientId: null,\n        doctorId: null,\n        visitDate: null,\n        chiefComplaint: '',\n        diagnosis: '',\n        treatmentPlan: '',\n        prescription: '',\n        examinationAdvice: '',\n        precautions: '',\n        followUpPlan: ''\n      },\n      recordRules: {\n        visitDate: [{\n          required: true,\n          message: '请选择就诊时间',\n          trigger: 'change'\n        }],\n        chiefComplaint: [{\n          required: true,\n          message: '请输入患者主诉',\n          trigger: 'blur'\n        }],\n        diagnosis: [{\n          required: true,\n          message: '请输入诊断结果',\n          trigger: 'blur'\n        }],\n        treatmentPlan: [{\n          required: true,\n          message: '请输入治疗方案',\n          trigger: 'blur'\n        }]\n      },\n      patientList: []\n    };\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    // 筛选后的病历\n    filteredRecords() {\n      let result = [...this.allRecords];\n\n      // 按日期范围筛选\n      if (this.filterForm.dateRange && this.filterForm.dateRange.length === 2) {\n        const startDate = new Date(this.filterForm.dateRange[0]);\n        startDate.setHours(0, 0, 0, 0);\n        const endDate = new Date(this.filterForm.dateRange[1]);\n        endDate.setHours(23, 59, 59, 999);\n        result = result.filter(item => {\n          const visitDate = new Date(item.visitDate);\n          return visitDate >= startDate && visitDate <= endDate;\n        });\n      }\n\n      // 按患者姓名筛选\n      if (this.filterForm.patientName) {\n        result = result.filter(item => item.patientName && item.patientName.includes(this.filterForm.patientName));\n      }\n\n      // 计算总数\n      this.total = result.length;\n\n      // 分页\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return result.slice(start, end);\n    }\n  },\n  mounted() {\n    this.fetchPatients();\n    this.fetchRecords();\n  },\n  methods: {\n    // 获取患者列表\n    fetchPatients() {\n      this.$http.get('/user/search?role=1').then(response => {\n        if (response.data.code === 200) {\n          this.patientList = response.data.data;\n        }\n      }).catch(error => {\n        console.error('获取患者列表错误:', error);\n      });\n    },\n    // 获取病历记录\n    fetchRecords() {\n      this.loading = true;\n      this.$http.get(`/medical-record/doctor/${this.currentUser.id}`).then(response => {\n        if (response.data.code === 200) {\n          // 处理病历数据，添加患者姓名\n          this.allRecords = response.data.data.map(item => {\n            const patient = this.patientList.find(p => p.id === item.patientId);\n            return {\n              ...item,\n              patientName: patient ? patient.realName : `患者(ID:${item.patientId})`\n            };\n          });\n\n          // 按就诊日期排序（降序）\n          this.allRecords.sort((a, b) => {\n            return new Date(b.visitDate) - new Date(a.visitDate);\n          });\n        }\n      }).catch(error => {\n        console.error('获取病历记录错误:', error);\n        this.$message.error('获取病历记录失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 查看病历\n    viewRecord(record) {\n      this.dialogType = 'view';\n      this.recordForm = {\n        ...record\n      };\n      this.currentPatientName = record.patientName;\n      this.recordDialogVisible = true;\n    },\n    // 编辑病历\n    editRecord(record) {\n      this.dialogType = 'edit';\n      this.recordForm = {\n        ...record\n      };\n      this.currentPatientName = record.patientName;\n      this.recordDialogVisible = true;\n    },\n    // 提交更新的病历\n    submitRecord() {\n      this.$refs.recordForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true;\n          this.$http.put('/medical-record', this.recordForm).then(response => {\n            if (response.data.code === 200) {\n              this.$message.success('病历更新成功');\n              this.recordDialogVisible = false;\n\n              // 刷新病历列表\n              this.fetchRecords();\n            } else {\n              this.$message.error(response.data.message || '病历更新失败');\n            }\n          }).catch(error => {\n            console.error('更新病历错误:', error);\n            this.$message.error('病历更新失败，请稍后重试');\n          }).finally(() => {\n            this.submitLoading = false;\n          });\n        }\n      });\n    },\n    // 打印当前查看的病历\n    printCurrentRecord() {\n      this.printRecord(this.recordForm);\n    },\n    // 打印病历\n    printRecord(record) {\n      this.$message.success('打印功能已触发，请检查打印机状态');\n\n      // 这里可以实现实际的打印功能，例如使用window.print()或生成PDF\n      const printWindow = window.open('', '_blank');\n      if (printWindow) {\n        const html = `\n          <html>\n            <head>\n              <title>病历详情 - ${record.id}</title>\n              <style>\n                body { font-family: Arial, sans-serif; padding: 20px; }\n                h1 { text-align: center; }\n                .section { margin-bottom: 20px; }\n                .section-title { font-weight: bold; border-bottom: 1px solid #ccc; padding-bottom: 5px; }\n                .item { display: flex; margin: 10px 0; }\n                .label { width: 120px; font-weight: bold; }\n                .value { flex: 1; }\n              </style>\n            </head>\n            <body>\n              <h1>智能齿科就诊系统 - 病历详情</h1>\n              \n              <div class=\"section\">\n                <div class=\"section-title\">基本信息</div>\n                <div class=\"item\">\n                  <div class=\"label\">病历号:</div>\n                  <div class=\"value\">${record.id}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">患者姓名:</div>\n                  <div class=\"value\">${record.patientName}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">主诊医生:</div>\n                  <div class=\"value\">${this.currentUser.realName}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">就诊日期:</div>\n                  <div class=\"value\">${this.formatDateTime(record.visitDate)}</div>\n                </div>\n              </div>\n              \n              <div class=\"section\">\n                <div class=\"section-title\">诊断信息</div>\n                <div class=\"item\">\n                  <div class=\"label\">主诉:</div>\n                  <div class=\"value\">${record.chiefComplaint || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">诊断结果:</div>\n                  <div class=\"value\">${record.diagnosis || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">治疗方案:</div>\n                  <div class=\"value\">${record.treatmentPlan || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">处方:</div>\n                  <div class=\"value\">${record.prescription || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">检查建议:</div>\n                  <div class=\"value\">${record.examinationAdvice || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">注意事项:</div>\n                  <div class=\"value\">${record.precautions || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">随访计划:</div>\n                  <div class=\"value\">${record.followUpPlan || '无'}</div>\n                </div>\n              </div>\n              \n              <div style=\"text-align: center; margin-top: 50px;\">\n                <p>医生签名: ____________</p>\n                <p>打印日期: ${new Date().toLocaleDateString()}</p>\n              </div>\n            </body>\n          </html>\n        `;\n        printWindow.document.write(html);\n        printWindow.document.close();\n        printWindow.onload = function () {\n          printWindow.print();\n          // printWindow.close()\n        };\n      }\n    },\n    // 刷新病历记录\n    refreshRecords() {\n      this.fetchRecords();\n    },\n    // 处理筛选条件变更\n    handleFilterChange() {\n      this.currentPage = 1;\n    },\n    // 重置筛选条件\n    resetFilter() {\n      this.filterForm = {\n        dateRange: null,\n        patientName: ''\n      };\n      this.handleFilterChange();\n    },\n    // 处理分页变更\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n    // 格式化日期时间\n    formatDateTime(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","loading","submitLoading","allRecords","filterForm","dateRange","patientName","currentPage","pageSize","total","recordDialogVisible","dialogType","currentPatientName","recordForm","id","appointmentId","patientId","doctorId","visitDate","chiefComplaint","diagnosis","treatmentPlan","prescription","examinationAdvice","precautions","followUpPlan","recordRules","required","message","trigger","patientList","computed","filteredRecords","result","length","startDate","Date","setHours","endDate","filter","item","includes","start","end","slice","mounted","fetchPatients","fetchRecords","methods","$http","get","then","response","code","catch","error","console","currentUser","map","patient","find","p","realName","sort","a","b","$message","finally","viewRecord","record","editRecord","submitRecord","$refs","validate","valid","put","success","printCurrentRecord","printRecord","printWindow","window","open","html","formatDateTime","toLocaleDateString","document","write","close","onload","print","refreshRecords","handleFilterChange","resetFilter","handleCurrentChange","page","dateString","date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes"],"sources":["src/views/doctor/MedicalRecords.vue"],"sourcesContent":["<template>\n  <div class=\"medical-records-container\">\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n        <el-form-item label=\"日期范围\">\n          <el-date-picker\n            v-model=\"filterForm.dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            value-format=\"yyyy-MM-dd\"\n            @change=\"handleFilterChange\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"患者姓名\">\n          <el-input v-model=\"filterForm.patientName\" placeholder=\"请输入患者姓名\" clearable @clear=\"handleFilterChange\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleFilterChange\">查询</el-button>\n          <el-button @click=\"resetFilter\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <el-card class=\"records-card\">\n      <div slot=\"header\">\n        <span>诊疗记录列表</span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"refreshRecords\">\n          <i class=\"el-icon-refresh\"></i> 刷新\n        </el-button>\n      </div>\n      \n      <el-table\n        :data=\"filteredRecords\"\n        v-loading=\"loading\"\n        border\n        style=\"width: 100%\">\n        <el-table-column prop=\"id\" label=\"病历号\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"patientName\" label=\"患者姓名\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"visitDate\" label=\"就诊日期\" width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDateTime(scope.row.visitDate) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"chiefComplaint\" label=\"主诉\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-tooltip v-if=\"scope.row.chiefComplaint\" :content=\"scope.row.chiefComplaint\" placement=\"top\">\n              <div class=\"ellipsis\">{{ scope.row.chiefComplaint }}</div>\n            </el-tooltip>\n            <span v-else>无</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"diagnosis\" label=\"诊断结果\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-tooltip v-if=\"scope.row.diagnosis\" :content=\"scope.row.diagnosis\" placement=\"top\">\n              <div class=\"ellipsis\">{{ scope.row.diagnosis }}</div>\n            </el-tooltip>\n            <span v-else>无</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"viewRecord(scope.row)\">查看</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"success\"\n              @click=\"editRecord(scope.row)\">编辑</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"info\"\n              @click=\"printRecord(scope.row)\">打印</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          @current-change=\"handleCurrentChange\"\n          :current-page.sync=\"currentPage\"\n          :page-size=\"pageSize\"\n          layout=\"total, prev, pager, next\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n    </el-card>\n    \n    <!-- 查看/编辑病历对话框 -->\n    <el-dialog :title=\"dialogType === 'view' ? '病历详情' : '编辑病历'\" :visible.sync=\"recordDialogVisible\" width=\"70%\" :close-on-click-modal=\"false\">\n      <el-form :model=\"recordForm\" :rules=\"recordRules\" ref=\"recordForm\" label-width=\"100px\" :disabled=\"dialogType === 'view'\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"患者姓名\">\n              <el-input v-model=\"currentPatientName\" disabled></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"就诊时间\" prop=\"visitDate\">\n              <el-date-picker\n                v-model=\"recordForm.visitDate\"\n                type=\"datetime\"\n                placeholder=\"选择就诊时间\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        \n        <el-form-item label=\"主诉\" prop=\"chiefComplaint\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.chiefComplaint\"\n            placeholder=\"请输入患者主诉\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"诊断结果\" prop=\"diagnosis\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.diagnosis\"\n            placeholder=\"请输入诊断结果\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"治疗方案\" prop=\"treatmentPlan\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.treatmentPlan\"\n            placeholder=\"请输入治疗方案\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"处方\" prop=\"prescription\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.prescription\"\n            placeholder=\"请输入处方\"\n            :rows=\"3\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"检查建议\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.examinationAdvice\"\n            placeholder=\"请输入检查建议\"\n            :rows=\"2\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"注意事项\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.precautions\"\n            placeholder=\"请输入注意事项\"\n            :rows=\"2\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"随访计划\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"recordForm.followUpPlan\"\n            placeholder=\"请输入随访计划\"\n            :rows=\"2\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"recordDialogVisible = false\">{{ dialogType === 'view' ? '关闭' : '取消' }}</el-button>\n        <el-button v-if=\"dialogType === 'view'\" type=\"primary\" @click=\"printCurrentRecord\">打印</el-button>\n        <el-button v-if=\"dialogType === 'edit'\" type=\"primary\" @click=\"submitRecord\" :loading=\"submitLoading\">更新</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'DoctorMedicalRecords',\n  data() {\n    return {\n      loading: false,\n      submitLoading: false,\n      allRecords: [],\n      filterForm: {\n        dateRange: null,\n        patientName: ''\n      },\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      \n      // 查看/编辑病历\n      recordDialogVisible: false,\n      dialogType: 'view', // 'view' 或 'edit'\n      currentPatientName: '',\n      recordForm: {\n        id: null,\n        appointmentId: null,\n        patientId: null,\n        doctorId: null,\n        visitDate: null,\n        chiefComplaint: '',\n        diagnosis: '',\n        treatmentPlan: '',\n        prescription: '',\n        examinationAdvice: '',\n        precautions: '',\n        followUpPlan: ''\n      },\n      recordRules: {\n        visitDate: [\n          { required: true, message: '请选择就诊时间', trigger: 'change' }\n        ],\n        chiefComplaint: [\n          { required: true, message: '请输入患者主诉', trigger: 'blur' }\n        ],\n        diagnosis: [\n          { required: true, message: '请输入诊断结果', trigger: 'blur' }\n        ],\n        treatmentPlan: [\n          { required: true, message: '请输入治疗方案', trigger: 'blur' }\n        ]\n      },\n      patientList: []\n    }\n  },\n  computed: {\n    ...mapGetters(['currentUser']),\n    \n    // 筛选后的病历\n    filteredRecords() {\n      let result = [...this.allRecords]\n      \n      // 按日期范围筛选\n      if (this.filterForm.dateRange && this.filterForm.dateRange.length === 2) {\n        const startDate = new Date(this.filterForm.dateRange[0])\n        startDate.setHours(0, 0, 0, 0)\n        \n        const endDate = new Date(this.filterForm.dateRange[1])\n        endDate.setHours(23, 59, 59, 999)\n        \n        result = result.filter(item => {\n          const visitDate = new Date(item.visitDate)\n          return visitDate >= startDate && visitDate <= endDate\n        })\n      }\n      \n      // 按患者姓名筛选\n      if (this.filterForm.patientName) {\n        result = result.filter(item => \n          item.patientName && item.patientName.includes(this.filterForm.patientName)\n        )\n      }\n      \n      // 计算总数\n      this.total = result.length\n      \n      // 分页\n      const start = (this.currentPage - 1) * this.pageSize\n      const end = start + this.pageSize\n      \n      return result.slice(start, end)\n    }\n  },\n  mounted() {\n    this.fetchPatients()\n    this.fetchRecords()\n  },\n  methods: {\n    // 获取患者列表\n    fetchPatients() {\n      this.$http.get('/user/search?role=1')\n        .then(response => {\n          if (response.data.code === 200) {\n            this.patientList = response.data.data\n          }\n        })\n        .catch(error => {\n          console.error('获取患者列表错误:', error)\n        })\n    },\n    \n    // 获取病历记录\n    fetchRecords() {\n      this.loading = true\n      this.$http.get(`/medical-record/doctor/${this.currentUser.id}`)\n        .then(response => {\n          if (response.data.code === 200) {\n            // 处理病历数据，添加患者姓名\n            this.allRecords = response.data.data.map(item => {\n              const patient = this.patientList.find(p => p.id === item.patientId)\n              return {\n                ...item,\n                patientName: patient ? patient.realName : `患者(ID:${item.patientId})`\n              }\n            })\n            \n            // 按就诊日期排序（降序）\n            this.allRecords.sort((a, b) => {\n              return new Date(b.visitDate) - new Date(a.visitDate)\n            })\n          }\n        })\n        .catch(error => {\n          console.error('获取病历记录错误:', error)\n          this.$message.error('获取病历记录失败，请稍后重试')\n        })\n        .finally(() => {\n          this.loading = false\n        })\n    },\n    \n    // 查看病历\n    viewRecord(record) {\n      this.dialogType = 'view'\n      this.recordForm = { ...record }\n      this.currentPatientName = record.patientName\n      this.recordDialogVisible = true\n    },\n    \n    // 编辑病历\n    editRecord(record) {\n      this.dialogType = 'edit'\n      this.recordForm = { ...record }\n      this.currentPatientName = record.patientName\n      this.recordDialogVisible = true\n    },\n    \n    // 提交更新的病历\n    submitRecord() {\n      this.$refs.recordForm.validate(valid => {\n        if (valid) {\n          this.submitLoading = true\n          \n          this.$http.put('/medical-record', this.recordForm)\n            .then(response => {\n              if (response.data.code === 200) {\n                this.$message.success('病历更新成功')\n                this.recordDialogVisible = false\n                \n                // 刷新病历列表\n                this.fetchRecords()\n              } else {\n                this.$message.error(response.data.message || '病历更新失败')\n              }\n            })\n            .catch(error => {\n              console.error('更新病历错误:', error)\n              this.$message.error('病历更新失败，请稍后重试')\n            })\n            .finally(() => {\n              this.submitLoading = false\n            })\n        }\n      })\n    },\n    \n    // 打印当前查看的病历\n    printCurrentRecord() {\n      this.printRecord(this.recordForm)\n    },\n    \n    // 打印病历\n    printRecord(record) {\n      this.$message.success('打印功能已触发，请检查打印机状态')\n      \n      // 这里可以实现实际的打印功能，例如使用window.print()或生成PDF\n      const printWindow = window.open('', '_blank')\n      if (printWindow) {\n        const html = `\n          <html>\n            <head>\n              <title>病历详情 - ${record.id}</title>\n              <style>\n                body { font-family: Arial, sans-serif; padding: 20px; }\n                h1 { text-align: center; }\n                .section { margin-bottom: 20px; }\n                .section-title { font-weight: bold; border-bottom: 1px solid #ccc; padding-bottom: 5px; }\n                .item { display: flex; margin: 10px 0; }\n                .label { width: 120px; font-weight: bold; }\n                .value { flex: 1; }\n              </style>\n            </head>\n            <body>\n              <h1>智能齿科就诊系统 - 病历详情</h1>\n              \n              <div class=\"section\">\n                <div class=\"section-title\">基本信息</div>\n                <div class=\"item\">\n                  <div class=\"label\">病历号:</div>\n                  <div class=\"value\">${record.id}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">患者姓名:</div>\n                  <div class=\"value\">${record.patientName}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">主诊医生:</div>\n                  <div class=\"value\">${this.currentUser.realName}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">就诊日期:</div>\n                  <div class=\"value\">${this.formatDateTime(record.visitDate)}</div>\n                </div>\n              </div>\n              \n              <div class=\"section\">\n                <div class=\"section-title\">诊断信息</div>\n                <div class=\"item\">\n                  <div class=\"label\">主诉:</div>\n                  <div class=\"value\">${record.chiefComplaint || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">诊断结果:</div>\n                  <div class=\"value\">${record.diagnosis || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">治疗方案:</div>\n                  <div class=\"value\">${record.treatmentPlan || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">处方:</div>\n                  <div class=\"value\">${record.prescription || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">检查建议:</div>\n                  <div class=\"value\">${record.examinationAdvice || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">注意事项:</div>\n                  <div class=\"value\">${record.precautions || '无'}</div>\n                </div>\n                <div class=\"item\">\n                  <div class=\"label\">随访计划:</div>\n                  <div class=\"value\">${record.followUpPlan || '无'}</div>\n                </div>\n              </div>\n              \n              <div style=\"text-align: center; margin-top: 50px;\">\n                <p>医生签名: ____________</p>\n                <p>打印日期: ${new Date().toLocaleDateString()}</p>\n              </div>\n            </body>\n          </html>\n        `\n        printWindow.document.write(html)\n        printWindow.document.close()\n        printWindow.onload = function() {\n          printWindow.print()\n          // printWindow.close()\n        }\n      }\n    },\n    \n    // 刷新病历记录\n    refreshRecords() {\n      this.fetchRecords()\n    },\n    \n    // 处理筛选条件变更\n    handleFilterChange() {\n      this.currentPage = 1\n    },\n    \n    // 重置筛选条件\n    resetFilter() {\n      this.filterForm = {\n        dateRange: null,\n        patientName: ''\n      }\n      this.handleFilterChange()\n    },\n    \n    // 处理分页变更\n    handleCurrentChange(page) {\n      this.currentPage = page\n    },\n    \n    // 格式化日期时间\n    formatDateTime(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.medical-records-container {\n  height: 100%;\n}\n\n.filter-card,\n.records-card {\n  margin-bottom: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}