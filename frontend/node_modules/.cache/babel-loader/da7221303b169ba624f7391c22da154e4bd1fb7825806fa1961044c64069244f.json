{"ast":null,"code":"export default {\n  name: 'Register',\n  data() {\n    // 自定义校验规则\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.registerForm.confirmPassword !== '') {\n          this.$refs.registerForm.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        realName: '',\n        gender: '男',\n        age: 30,\n        phone: '',\n        email: '',\n        role: 1,\n        // 默认注册为患者\n        title: '',\n        // 医生职称\n        specialty: '' // 医生专长\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能小于6个字符',\n          trigger: 'blur'\n        }, {\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        realName: [{\n          required: true,\n          message: '请输入真实姓名',\n          trigger: 'blur'\n        }],\n        gender: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄',\n          trigger: 'blur'\n        }],\n        phone: [{\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号码',\n          trigger: 'blur'\n        }],\n        email: [{\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleRegister() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n\n          // 构建注册数据，移除确认密码字段\n          const registerData = {\n            ...this.registerForm\n          };\n          delete registerData.confirmPassword;\n\n          // 如果不是医生，删除医生相关字段\n          if (registerData.role !== 2) {\n            delete registerData.title;\n            delete registerData.specialty;\n          }\n\n          // 将role字段重命名为roleId，以符合后端接口要求\n          registerData.roleId = registerData.role;\n          delete registerData.role;\n\n          // 发送注册请求\n          this.$http.post('/user/register', registerData).then(response => {\n            const {\n              code,\n              message\n            } = response.data;\n            if (code === 200) {\n              this.$message.success('注册成功，请登录');\n              this.$router.push('/login');\n            } else {\n              this.$message.error(message || '注册失败');\n            }\n          }).catch(error => {\n            console.error('注册错误:', error);\n            this.$message.error('注册失败，请稍后重试');\n          }).finally(() => {\n            this.loading = false;\n          });\n        }\n      });\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass","rule","value","callback","Error","registerForm","confirmPassword","$refs","validateField","validatePass2","password","username","realName","gender","age","phone","email","role","title","specialty","rules","required","message","trigger","min","max","validator","pattern","type","loading","methods","handleRegister","validate","valid","registerData","roleId","$http","post","then","response","code","$message","success","$router","push","error","catch","console","finally","goToLogin"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <el-card class=\"register-card\">\n      <div class=\"register-title\">用户注册</div>\n      <el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\" label-width=\"80px\" class=\"register-form\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"registerForm.username\" placeholder=\"请输入用户名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"registerForm.password\" placeholder=\"请输入密码\" show-password></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input v-model=\"registerForm.confirmPassword\" placeholder=\"请再次输入密码\" show-password></el-input>\n        </el-form-item>\n        <el-form-item label=\"真实姓名\" prop=\"realName\">\n          <el-input v-model=\"registerForm.realName\" placeholder=\"请输入真实姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-radio-group v-model=\"registerForm.gender\">\n            <el-radio label=\"男\">男</el-radio>\n            <el-radio label=\"女\">女</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"年龄\" prop=\"age\">\n          <el-input-number v-model=\"registerForm.age\" :min=\"1\" :max=\"120\"></el-input-number>\n        </el-form-item>\n        <el-form-item label=\"手机号\" prop=\"phone\">\n          <el-input v-model=\"registerForm.phone\" placeholder=\"请输入手机号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"registerForm.email\" placeholder=\"请输入邮箱\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"账号类型\" prop=\"role\">\n          <el-radio-group v-model=\"registerForm.role\">\n            <el-radio :label=\"1\">患者</el-radio>\n            <el-radio :label=\"2\">医生</el-radio>\n            <el-radio :label=\"3\">管理员</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item v-if=\"registerForm.role === 2\" label=\"职称\" prop=\"title\">\n          <el-select v-model=\"registerForm.title\" placeholder=\"请选择职称\">\n            <el-option label=\"主治医师\" value=\"主治医师\"></el-option>\n            <el-option label=\"副主治医师\" value=\"副主治医师\"></el-option>\n            <el-option label=\"主任医师\" value=\"主任医师\"></el-option>\n            <el-option label=\"住院医师\" value=\"住院医师\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item v-if=\"registerForm.role === 2\" label=\"专长\" prop=\"specialty\">\n          <el-select v-model=\"registerForm.specialty\" placeholder=\"请选择专长领域\">\n            <el-option label=\"普通口腔科\" value=\"普通口腔科\"></el-option>\n            <el-option label=\"正牙科\" value=\"正牙科\"></el-option>\n            <el-option label=\"牙周科\" value=\"牙周科\"></el-option>\n            <el-option label=\"口腔修复科\" value=\"口腔修复科\"></el-option>\n            <el-option label=\"儿童口腔科\" value=\"儿童口腔科\"></el-option>\n            <el-option label=\"口腔颗面外科\" value=\"口腔颗面外科\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleRegister\" :loading=\"loading\">注册</el-button>\n          <el-button @click=\"goToLogin\">返回登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Register',\n  data() {\n    // 自定义校验规则\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else {\n        if (this.registerForm.confirmPassword !== '') {\n          this.$refs.registerForm.validateField('confirmPassword')\n        }\n        callback()\n      }\n    }\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: '',\n        realName: '',\n        gender: '男',\n        age: 30,\n        phone: '',\n        email: '',\n        role: 1, // 默认注册为患者\n        title: '', // 医生职称\n        specialty: '' // 医生专长\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能小于6个字符', trigger: 'blur' },\n          { validator: validatePass, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\n          { validator: validatePass2, trigger: 'blur' }\n        ],\n        realName: [\n          { required: true, message: '请输入真实姓名', trigger: 'blur' }\n        ],\n        gender: [\n          { required: true, message: '请选择性别', trigger: 'change' }\n        ],\n        age: [\n          { required: true, message: '请输入年龄', trigger: 'blur' }\n        ],\n        phone: [\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\n        ],\n        email: [\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ]\n      },\n      loading: false\n    }\n  },\n  methods: {\n    handleRegister() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          this.loading = true\n          \n          // 构建注册数据，移除确认密码字段\n          const registerData = { ...this.registerForm }\n          delete registerData.confirmPassword\n          \n          // 如果不是医生，删除医生相关字段\n          if (registerData.role !== 2) {\n            delete registerData.title\n            delete registerData.specialty\n          }\n          \n          // 将role字段重命名为roleId，以符合后端接口要求\n          registerData.roleId = registerData.role\n          delete registerData.role\n          \n          // 发送注册请求\n          this.$http.post('/user/register', registerData)\n            .then(response => {\n              const { code, message } = response.data\n              if (code === 200) {\n                this.$message.success('注册成功，请登录')\n                this.$router.push('/login')\n              } else {\n                this.$message.error(message || '注册失败')\n              }\n            })\n            .catch(error => {\n              console.error('注册错误:', error)\n              this.$message.error('注册失败，请稍后重试')\n            })\n            .finally(() => {\n              this.loading = false\n            })\n        }\n      })\n    },\n    goToLogin() {\n      this.$router.push('/login')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f7fa;\n  padding: 20px 0;\n}\n\n.register-card {\n  width: 500px;\n  border-radius: 5px;\n}\n\n.register-title {\n  text-align: center;\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #409EFF;\n}\n\n.register-form {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}