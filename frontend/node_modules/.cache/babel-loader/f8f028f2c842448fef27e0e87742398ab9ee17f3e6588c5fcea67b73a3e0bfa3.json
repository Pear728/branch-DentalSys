{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'AdminData',\n  data() {\n    return {\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      // 统计数据\n      statisticsData: {\n        totalAppointments: 0,\n        appointmentRateText: '0%',\n        appointmentRateIcon: 'el-icon-caret-top',\n        appointmentRateClass: 'rate-up',\n        completedAppointments: 0,\n        completionRateText: '0%',\n        completionRateIcon: 'el-icon-caret-top',\n        completionRateClass: 'rate-up',\n        newPatients: 0,\n        newPatientRateText: '0%',\n        newPatientRateIcon: 'el-icon-caret-top',\n        newPatientRateClass: 'rate-up',\n        totalRevenue: 0,\n        revenueRateText: '0%',\n        revenueRateIcon: 'el-icon-caret-top',\n        revenueRateClass: 'rate-up'\n      },\n      // 图表实例\n      appointmentChart: null,\n      revenueChart: null,\n      departmentChart: null,\n      doctorWorkloadChart: null,\n      // 数据\n      appointmentData: [],\n      revenueData: [],\n      departmentData: [],\n      doctorWorkloadData: []\n    };\n  },\n  mounted() {\n    this.initCharts();\n    this.fetchData();\n\n    // 监听窗口大小变化，重绘图表\n    window.addEventListener('resize', this.resizeCharts);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeCharts);\n\n    // 销毁图表实例\n    this.appointmentChart && this.appointmentChart.dispose();\n    this.revenueChart && this.revenueChart.dispose();\n    this.departmentChart && this.departmentChart.dispose();\n    this.doctorWorkloadChart && this.doctorWorkloadChart.dispose();\n  },\n  methods: {\n    // 初始化图表\n    initCharts() {\n      // 预约统计图表\n      this.appointmentChart = echarts.init(document.getElementById('appointment-chart'));\n\n      // 收入统计图表\n      this.revenueChart = echarts.init(document.getElementById('revenue-chart'));\n\n      // 科室分布图表\n      this.departmentChart = echarts.init(document.getElementById('department-chart'));\n\n      // 医生工作量图表\n      this.doctorWorkloadChart = echarts.init(document.getElementById('doctor-workload-chart'));\n    },\n    // 重绘图表\n    resizeCharts() {\n      this.appointmentChart && this.appointmentChart.resize();\n      this.revenueChart && this.revenueChart.resize();\n      this.departmentChart && this.departmentChart.resize();\n      this.doctorWorkloadChart && this.doctorWorkloadChart.resize();\n    },\n    // 处理日期变化\n    handleDateChange() {\n      this.fetchData();\n    },\n    // 获取数据\n    fetchData() {\n      const startDate = this.formatDate(this.dateRange[0]);\n      const endDate = this.formatDate(this.dateRange[1]);\n\n      // 获取统计数据\n      this.$http.get(`/admin/statistics?startDate=${startDate}&endDate=${endDate}`).then(response => {\n        if (response.data.code === 200) {\n          const data = response.data.data;\n\n          // 更新统计数据\n          this.statisticsData.totalAppointments = data.totalAppointments;\n          this.statisticsData.appointmentRateText = data.appointmentRate + '%';\n          this.statisticsData.appointmentRateIcon = data.appointmentRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom';\n          this.statisticsData.appointmentRateClass = data.appointmentRate >= 0 ? 'rate-up' : 'rate-down';\n          this.statisticsData.completedAppointments = data.completedAppointments;\n          this.statisticsData.completionRateText = data.completionRate + '%';\n          this.statisticsData.completionRateIcon = data.completionRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom';\n          this.statisticsData.completionRateClass = data.completionRate >= 0 ? 'rate-up' : 'rate-down';\n          this.statisticsData.newPatients = data.newPatients;\n          this.statisticsData.newPatientRateText = data.newPatientRate + '%';\n          this.statisticsData.newPatientRateIcon = data.newPatientRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom';\n          this.statisticsData.newPatientRateClass = data.newPatientRate >= 0 ? 'rate-up' : 'rate-down';\n          this.statisticsData.totalRevenue = data.totalRevenue;\n          this.statisticsData.revenueRateText = data.revenueRate + '%';\n          this.statisticsData.revenueRateIcon = data.revenueRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom';\n          this.statisticsData.revenueRateClass = data.revenueRate >= 0 ? 'rate-up' : 'rate-down';\n\n          // 更新图表数据\n          this.appointmentData = data.appointmentData;\n          this.revenueData = data.revenueData;\n          this.departmentData = data.departmentData;\n          this.doctorWorkloadData = data.doctorWorkloadData;\n\n          // 更新图表\n          this.updateAppointmentChart();\n          this.updateRevenueChart();\n          this.updateDepartmentChart();\n          this.updateDoctorWorkloadChart();\n        }\n      }).catch(error => {\n        console.error('获取统计数据失败', error);\n        this.$message.error('获取统计数据失败，请稍后重试');\n      });\n    },\n    // 更新预约统计图表\n    updateAppointmentChart() {\n      if (!this.appointmentData || this.appointmentData.length === 0) {\n        this.appointmentChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        });\n        return;\n      }\n      const dates = this.appointmentData.map(item => item.date);\n      const appointments = this.appointmentData.map(item => item.appointments);\n      const completed = this.appointmentData.map(item => item.completed);\n      const canceled = this.appointmentData.map(item => item.canceled);\n      this.appointmentChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['总预约数', '已完成', '已取消'],\n          bottom: 0\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '12%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '总预约数',\n          type: 'line',\n          data: appointments,\n          smooth: true,\n          itemStyle: {\n            color: '#409EFF'\n          }\n        }, {\n          name: '已完成',\n          type: 'bar',\n          data: completed,\n          itemStyle: {\n            color: '#67C23A'\n          }\n        }, {\n          name: '已取消',\n          type: 'bar',\n          data: canceled,\n          itemStyle: {\n            color: '#F56C6C'\n          }\n        }]\n      });\n    },\n    // 更新收入统计图表\n    updateRevenueChart() {\n      if (!this.revenueData || this.revenueData.length === 0) {\n        this.revenueChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        });\n        return;\n      }\n      const dates = this.revenueData.map(item => item.date);\n      const revenues = this.revenueData.map(item => item.revenue);\n      this.revenueChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params) {\n            return params[0].name + '<br/>' + params[0].seriesName + ': ¥' + params[0].value.toFixed(2);\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value',\n          name: '金额（元）',\n          axisLabel: {\n            formatter: function (value) {\n              return '¥' + value;\n            }\n          }\n        },\n        series: [{\n          name: '收入',\n          type: 'line',\n          data: revenues,\n          smooth: true,\n          areaStyle: {},\n          itemStyle: {\n            color: '#67C23A'\n          }\n        }]\n      });\n    },\n    // 更新科室分布图表\n    updateDepartmentChart() {\n      if (!this.departmentData || this.departmentData.length === 0) {\n        this.departmentChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        });\n        return;\n      }\n      this.departmentChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.departmentData.map(item => item.name)\n        },\n        series: [{\n          name: '科室分布',\n          type: 'pie',\n          radius: ['50%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: this.departmentData.map(item => ({\n            value: item.value,\n            name: item.name\n          }))\n        }]\n      });\n    },\n    // 更新医生工作量图表\n    updateDoctorWorkloadChart() {\n      if (!this.doctorWorkloadData || this.doctorWorkloadData.length === 0) {\n        this.doctorWorkloadChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        });\n        return;\n      }\n      const doctors = this.doctorWorkloadData.map(item => item.name);\n      const appointments = this.doctorWorkloadData.map(item => item.appointments);\n      this.doctorWorkloadChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category',\n          data: doctors,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        series: [{\n          name: '完成预约数',\n          type: 'bar',\n          data: appointments,\n          itemStyle: {\n            color: function (params) {\n              // 颜色列表\n              const colorList = ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399'];\n              return colorList[params.dataIndex % colorList.length];\n            }\n          }\n        }]\n      });\n    },\n    // 格式化日期\n    formatDate(date) {\n      if (!date) return '';\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","dateRange","Date","getTime","pickerOptions","shortcuts","text","onClick","picker","end","start","setTime","$emit","statisticsData","totalAppointments","appointmentRateText","appointmentRateIcon","appointmentRateClass","completedAppointments","completionRateText","completionRateIcon","completionRateClass","newPatients","newPatientRateText","newPatientRateIcon","newPatientRateClass","totalRevenue","revenueRateText","revenueRateIcon","revenueRateClass","appointmentChart","revenueChart","departmentChart","doctorWorkloadChart","appointmentData","revenueData","departmentData","doctorWorkloadData","mounted","initCharts","fetchData","window","addEventListener","resizeCharts","beforeDestroy","removeEventListener","dispose","methods","init","document","getElementById","resize","handleDateChange","startDate","formatDate","endDate","$http","get","then","response","code","appointmentRate","completionRate","newPatientRate","revenueRate","updateAppointmentChart","updateRevenueChart","updateDepartmentChart","updateDoctorWorkloadChart","catch","error","console","$message","length","setOption","title","left","top","dates","map","item","date","appointments","completed","canceled","tooltip","trigger","axisPointer","type","legend","bottom","grid","right","containLabel","xAxis","yAxis","series","smooth","itemStyle","color","revenues","revenue","formatter","params","seriesName","value","toFixed","axisLabel","areaStyle","orient","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","labelLine","doctors","interval","rotate","colorList","dataIndex","year","getFullYear","month","getMonth","toString","padStart","day","getDate"],"sources":["src/views/admin/Data.vue"],"sourcesContent":["<template>\n  <div class=\"data-container\">\n    <el-card class=\"main-card\">\n      <div slot=\"header\">\n        <span>数据统计</span>\n        <el-date-picker\n          v-model=\"dateRange\"\n          type=\"daterange\"\n          align=\"right\"\n          unlink-panels\n          range-separator=\"至\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n          :picker-options=\"pickerOptions\"\n          @change=\"handleDateChange\"\n          style=\"float: right; margin-top: -5px; width: 350px;\"\n        ></el-date-picker>\n      </div>\n      \n      <el-row :gutter=\"20\" class=\"summary-row\">\n        <el-col :span=\"6\">\n          <el-card shadow=\"hover\" class=\"summary-card\">\n            <div class=\"summary-title\">预约总数</div>\n            <div class=\"summary-value\">{{ statisticsData.totalAppointments }}</div>\n            <div class=\"summary-footer\">\n              <span :class=\"[statisticsData.appointmentRateClass]\">\n                <i :class=\"statisticsData.appointmentRateIcon\"></i>\n                {{ statisticsData.appointmentRateText }}\n              </span>\n              <span>较上期</span>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card shadow=\"hover\" class=\"summary-card\">\n            <div class=\"summary-title\">完成预约</div>\n            <div class=\"summary-value\">{{ statisticsData.completedAppointments }}</div>\n            <div class=\"summary-footer\">\n              <span :class=\"[statisticsData.completionRateClass]\">\n                <i :class=\"statisticsData.completionRateIcon\"></i>\n                {{ statisticsData.completionRateText }}\n              </span>\n              <span>较上期</span>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card shadow=\"hover\" class=\"summary-card\">\n            <div class=\"summary-title\">新增患者</div>\n            <div class=\"summary-value\">{{ statisticsData.newPatients }}</div>\n            <div class=\"summary-footer\">\n              <span :class=\"[statisticsData.newPatientRateClass]\">\n                <i :class=\"statisticsData.newPatientRateIcon\"></i>\n                {{ statisticsData.newPatientRateText }}\n              </span>\n              <span>较上期</span>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card shadow=\"hover\" class=\"summary-card\">\n            <div class=\"summary-title\">总收入</div>\n            <div class=\"summary-value\">¥{{ statisticsData.totalRevenue.toFixed(2) }}</div>\n            <div class=\"summary-footer\">\n              <span :class=\"[statisticsData.revenueRateClass]\">\n                <i :class=\"statisticsData.revenueRateIcon\"></i>\n                {{ statisticsData.revenueRateText }}\n              </span>\n              <span>较上期</span>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n      \n      <el-row :gutter=\"20\" class=\"chart-row\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\" class=\"chart-card\">\n            <div slot=\"header\">\n              <span>预约统计</span>\n            </div>\n            <div id=\"appointment-chart\" class=\"chart\"></div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\" class=\"chart-card\">\n            <div slot=\"header\">\n              <span>收入统计</span>\n            </div>\n            <div id=\"revenue-chart\" class=\"chart\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n      \n      <el-row :gutter=\"20\" class=\"chart-row\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\" class=\"chart-card\">\n            <div slot=\"header\">\n              <span>科室分布</span>\n            </div>\n            <div id=\"department-chart\" class=\"chart\"></div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"hover\" class=\"chart-card\">\n            <div slot=\"header\">\n              <span>医生工作量</span>\n            </div>\n            <div id=\"doctor-workload-chart\" class=\"chart\"></div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'AdminData',\n  data() {\n    return {\n      dateRange: [new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000), new Date()],\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近三个月',\n          onClick(picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      },\n      // 统计数据\n      statisticsData: {\n        totalAppointments: 0,\n        appointmentRateText: '0%',\n        appointmentRateIcon: 'el-icon-caret-top',\n        appointmentRateClass: 'rate-up',\n        \n        completedAppointments: 0,\n        completionRateText: '0%',\n        completionRateIcon: 'el-icon-caret-top',\n        completionRateClass: 'rate-up',\n        \n        newPatients: 0,\n        newPatientRateText: '0%',\n        newPatientRateIcon: 'el-icon-caret-top',\n        newPatientRateClass: 'rate-up',\n        \n        totalRevenue: 0,\n        revenueRateText: '0%',\n        revenueRateIcon: 'el-icon-caret-top',\n        revenueRateClass: 'rate-up'\n      },\n      \n      // 图表实例\n      appointmentChart: null,\n      revenueChart: null,\n      departmentChart: null,\n      doctorWorkloadChart: null,\n      \n      // 数据\n      appointmentData: [],\n      revenueData: [],\n      departmentData: [],\n      doctorWorkloadData: []\n    }\n  },\n  mounted() {\n    this.initCharts()\n    this.fetchData()\n    \n    // 监听窗口大小变化，重绘图表\n    window.addEventListener('resize', this.resizeCharts)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.resizeCharts)\n    \n    // 销毁图表实例\n    this.appointmentChart && this.appointmentChart.dispose()\n    this.revenueChart && this.revenueChart.dispose()\n    this.departmentChart && this.departmentChart.dispose()\n    this.doctorWorkloadChart && this.doctorWorkloadChart.dispose()\n  },\n  methods: {\n    // 初始化图表\n    initCharts() {\n      // 预约统计图表\n      this.appointmentChart = echarts.init(document.getElementById('appointment-chart'))\n      \n      // 收入统计图表\n      this.revenueChart = echarts.init(document.getElementById('revenue-chart'))\n      \n      // 科室分布图表\n      this.departmentChart = echarts.init(document.getElementById('department-chart'))\n      \n      // 医生工作量图表\n      this.doctorWorkloadChart = echarts.init(document.getElementById('doctor-workload-chart'))\n    },\n    \n    // 重绘图表\n    resizeCharts() {\n      this.appointmentChart && this.appointmentChart.resize()\n      this.revenueChart && this.revenueChart.resize()\n      this.departmentChart && this.departmentChart.resize()\n      this.doctorWorkloadChart && this.doctorWorkloadChart.resize()\n    },\n    \n    // 处理日期变化\n    handleDateChange() {\n      this.fetchData()\n    },\n    \n    // 获取数据\n    fetchData() {\n      const startDate = this.formatDate(this.dateRange[0])\n      const endDate = this.formatDate(this.dateRange[1])\n      \n      // 获取统计数据\n      this.$http.get(`/admin/statistics?startDate=${startDate}&endDate=${endDate}`)\n        .then(response => {\n          if (response.data.code === 200) {\n            const data = response.data.data\n            \n            // 更新统计数据\n            this.statisticsData.totalAppointments = data.totalAppointments\n            this.statisticsData.appointmentRateText = data.appointmentRate + '%'\n            this.statisticsData.appointmentRateIcon = data.appointmentRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom'\n            this.statisticsData.appointmentRateClass = data.appointmentRate >= 0 ? 'rate-up' : 'rate-down'\n            \n            this.statisticsData.completedAppointments = data.completedAppointments\n            this.statisticsData.completionRateText = data.completionRate + '%'\n            this.statisticsData.completionRateIcon = data.completionRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom'\n            this.statisticsData.completionRateClass = data.completionRate >= 0 ? 'rate-up' : 'rate-down'\n            \n            this.statisticsData.newPatients = data.newPatients\n            this.statisticsData.newPatientRateText = data.newPatientRate + '%'\n            this.statisticsData.newPatientRateIcon = data.newPatientRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom'\n            this.statisticsData.newPatientRateClass = data.newPatientRate >= 0 ? 'rate-up' : 'rate-down'\n            \n            this.statisticsData.totalRevenue = data.totalRevenue\n            this.statisticsData.revenueRateText = data.revenueRate + '%'\n            this.statisticsData.revenueRateIcon = data.revenueRate >= 0 ? 'el-icon-caret-top' : 'el-icon-caret-bottom'\n            this.statisticsData.revenueRateClass = data.revenueRate >= 0 ? 'rate-up' : 'rate-down'\n            \n            // 更新图表数据\n            this.appointmentData = data.appointmentData\n            this.revenueData = data.revenueData\n            this.departmentData = data.departmentData\n            this.doctorWorkloadData = data.doctorWorkloadData\n            \n            // 更新图表\n            this.updateAppointmentChart()\n            this.updateRevenueChart()\n            this.updateDepartmentChart()\n            this.updateDoctorWorkloadChart()\n          }\n        })\n        .catch(error => {\n          console.error('获取统计数据失败', error)\n          this.$message.error('获取统计数据失败，请稍后重试')\n        })\n    },\n    \n    // 更新预约统计图表\n    updateAppointmentChart() {\n      if (!this.appointmentData || this.appointmentData.length === 0) {\n        this.appointmentChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        })\n        return\n      }\n      \n      const dates = this.appointmentData.map(item => item.date)\n      const appointments = this.appointmentData.map(item => item.appointments)\n      const completed = this.appointmentData.map(item => item.completed)\n      const canceled = this.appointmentData.map(item => item.canceled)\n      \n      this.appointmentChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['总预约数', '已完成', '已取消'],\n          bottom: 0\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '12%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            name: '总预约数',\n            type: 'line',\n            data: appointments,\n            smooth: true,\n            itemStyle: {\n              color: '#409EFF'\n            }\n          },\n          {\n            name: '已完成',\n            type: 'bar',\n            data: completed,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          },\n          {\n            name: '已取消',\n            type: 'bar',\n            data: canceled,\n            itemStyle: {\n              color: '#F56C6C'\n            }\n          }\n        ]\n      })\n    },\n    \n    // 更新收入统计图表\n    updateRevenueChart() {\n      if (!this.revenueData || this.revenueData.length === 0) {\n        this.revenueChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        })\n        return\n      }\n      \n      const dates = this.revenueData.map(item => item.date)\n      const revenues = this.revenueData.map(item => item.revenue)\n      \n      this.revenueChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          formatter: function(params) {\n            return params[0].name + '<br/>' + params[0].seriesName + ': ¥' + params[0].value.toFixed(2)\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value',\n          name: '金额（元）',\n          axisLabel: {\n            formatter: function(value) {\n              return '¥' + value\n            }\n          }\n        },\n        series: [\n          {\n            name: '收入',\n            type: 'line',\n            data: revenues,\n            smooth: true,\n            areaStyle: {},\n            itemStyle: {\n              color: '#67C23A'\n            }\n          }\n        ]\n      })\n    },\n    \n    // 更新科室分布图表\n    updateDepartmentChart() {\n      if (!this.departmentData || this.departmentData.length === 0) {\n        this.departmentChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        })\n        return\n      }\n      \n      this.departmentChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.departmentData.map(item => item.name)\n        },\n        series: [\n          {\n            name: '科室分布',\n            type: 'pie',\n            radius: ['50%', '70%'],\n            avoidLabelOverlap: false,\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: this.departmentData.map(item => ({\n              value: item.value,\n              name: item.name\n            }))\n          }\n        ]\n      })\n    },\n    \n    // 更新医生工作量图表\n    updateDoctorWorkloadChart() {\n      if (!this.doctorWorkloadData || this.doctorWorkloadData.length === 0) {\n        this.doctorWorkloadChart.setOption({\n          title: {\n            text: '暂无数据',\n            left: 'center',\n            top: 'center'\n          }\n        })\n        return\n      }\n      \n      const doctors = this.doctorWorkloadData.map(item => item.name)\n      const appointments = this.doctorWorkloadData.map(item => item.appointments)\n      \n      this.doctorWorkloadChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category',\n          data: doctors,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        series: [\n          {\n            name: '完成预约数',\n            type: 'bar',\n            data: appointments,\n            itemStyle: {\n              color: function(params) {\n                // 颜色列表\n                const colorList = ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399']\n                return colorList[params.dataIndex % colorList.length]\n              }\n            }\n          }\n        ]\n      })\n    },\n    \n    // 格式化日期\n    formatDate(date) {\n      if (!date) return ''\n      \n      const year = date.getFullYear()\n      const month = (date.getMonth() + 1).toString().padStart(2, '0')\n      const day = date.getDate().toString().padStart(2, '0')\n      \n      return `${year}-${month}-${day}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.data-container {\n  padding-bottom: 20px;\n}\n\n.main-card {\n  margin-bottom: 20px;\n}\n\n.summary-row {\n  margin-bottom: 20px;\n}\n\n.summary-card {\n  height: 120px;\n  text-align: center;\n}\n\n.summary-title {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n\n.summary-value {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n.summary-footer {\n  font-size: 12px;\n  color: #909399;\n}\n\n.rate-up {\n  color: #67C23A;\n}\n\n.rate-down {\n  color: #F56C6C;\n}\n\n.chart-row {\n  margin-bottom: 20px;\n}\n\n.chart-card {\n  height: 350px;\n  margin-bottom: 20px;\n}\n\n.chart {\n  height: 280px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}