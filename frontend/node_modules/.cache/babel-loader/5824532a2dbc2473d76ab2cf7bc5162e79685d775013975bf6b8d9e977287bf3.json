{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const store = useStore();\n    const isLoading = computed(() => store.state.isLoading);\n\n    // 系统功能\n    const features = [{\n      title: 'XSS测试',\n      description: '测试不同类型的XSS攻击载荷，并查看防御效果。',\n      link: '/test',\n      buttonText: '开始测试'\n    }, {\n      title: '攻击日志',\n      description: '查看系统检测到的XSS攻击尝试记录及分析。',\n      link: '/logs',\n      buttonText: '查看日志'\n    }, {\n      title: '防御配置',\n      description: '配置系统的XSS防御策略，包括输入验证、输出编码和CSP。',\n      link: '/config',\n      buttonText: '调整配置'\n    }, {\n      title: '数据库记录',\n      description: '查看数据库连接信息和攻击日志记录详情。',\n      link: '/dbinfo',\n      buttonText: '查看数据库'\n    }];\n\n    // 攻击统计数据\n    const attackStats = ref({\n      total: 0,\n      high: 0,\n      medium: 0\n    });\n\n    // 获取攻击统计\n    const fetchAttackStats = async () => {\n      try {\n        await store.dispatch('fetchAttackLogs');\n        const logs = store.state.attackLogs;\n        attackStats.value = {\n          total: logs.length,\n          high: logs.filter(log => log.severity === 'high').length,\n          medium: logs.filter(log => log.severity === 'medium').length\n        };\n      } catch (error) {\n        console.error('Failed to fetch attack stats:', error);\n      }\n    };\n\n    // 页面导航\n    const navigateTo = path => {\n      router.push(path);\n    };\n    onMounted(() => {\n      fetchAttackStats();\n    });\n    const __returned__ = {\n      router,\n      store,\n      isLoading,\n      features,\n      attackStats,\n      fetchAttackStats,\n      navigateTo,\n      ref,\n      onMounted,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","useStore","router","store","isLoading","state","features","title","description","link","buttonText","attackStats","total","high","medium","fetchAttackStats","dispatch","logs","attackLogs","value","length","filter","log","severity","error","console","navigateTo","path","push"],"sources":["D:/Desktop/AI接单项目/进行中/20250321-WX-WEB-01/工作文件/xss-defense-system/frontend/src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <div class=\"welcome-section\">\r\n          <h2>欢迎使用XSS攻击分析及防御系统</h2>\r\n          <p>本系统提供XSS攻击检测、防御和分析功能，帮助您保护Web应用程序免受XSS攻击威胁。</p>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" class=\"center-row\">\r\n      <el-col :span=\"10\" v-for=\"(feature, index) in features\" :key=\"index\">\r\n        <el-card class=\"feature-card\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h3>{{ feature.title }}</h3>\r\n            </div>\r\n          </template>\r\n          <div class=\"card-content\">\r\n            <p>{{ feature.description }}</p>\r\n            <el-button type=\"primary\" @click=\"navigateTo(feature.link)\">\r\n              {{ feature.buttonText }}\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" class=\"mt-20\">\r\n      <el-col :span=\"24\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h3>XSS攻击统计</h3>\r\n            </div>\r\n          </template>\r\n          <div v-if=\"isLoading\" class=\"loading-container\">\r\n            <el-skeleton :rows=\"3\" animated />\r\n          </div>\r\n          <div v-else class=\"stat-container\">\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"8\">\r\n                <div class=\"stat-item\">\r\n                  <h4>攻击总数</h4>\r\n                  <div class=\"stat-value\">{{ attackStats.total }}</div>\r\n                </div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <div class=\"stat-item\">\r\n                  <h4>高危攻击</h4>\r\n                  <div class=\"stat-value danger\">{{ attackStats.high }}</div>\r\n                </div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                <div class=\"stat-item\">\r\n                  <h4>中危攻击</h4>\r\n                  <div class=\"stat-value warning\">{{ attackStats.medium }}</div>\r\n                </div>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\n\r\nconst router = useRouter()\r\nconst store = useStore()\r\nconst isLoading = computed(() => store.state.isLoading)\r\n\r\n// 系统功能\r\nconst features = [\r\n  {\r\n    title: 'XSS测试',\r\n    description: '测试不同类型的XSS攻击载荷，并查看防御效果。',\r\n    link: '/test',\r\n    buttonText: '开始测试'\r\n  },\r\n  {\r\n    title: '攻击日志',\r\n    description: '查看系统检测到的XSS攻击尝试记录及分析。',\r\n    link: '/logs',\r\n    buttonText: '查看日志'\r\n  },\r\n  {\r\n    title: '防御配置',\r\n    description: '配置系统的XSS防御策略，包括输入验证、输出编码和CSP。',\r\n    link: '/config',\r\n    buttonText: '调整配置'\r\n  },\r\n  {\r\n    title: '数据库记录',\r\n    description: '查看数据库连接信息和攻击日志记录详情。',\r\n    link: '/dbinfo',\r\n    buttonText: '查看数据库'\r\n  }\r\n]\r\n\r\n// 攻击统计数据\r\nconst attackStats = ref({\r\n  total: 0,\r\n  high: 0,\r\n  medium: 0\r\n})\r\n\r\n// 获取攻击统计\r\nconst fetchAttackStats = async () => {\r\n  try {\r\n    await store.dispatch('fetchAttackLogs')\r\n    const logs = store.state.attackLogs\r\n\r\n    attackStats.value = {\r\n      total: logs.length,\r\n      high: logs.filter(log => log.severity === 'high').length,\r\n      medium: logs.filter(log => log.severity === 'medium').length\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to fetch attack stats:', error)\r\n  }\r\n}\r\n\r\n// 页面导航\r\nconst navigateTo = (path) => {\r\n  router.push(path)\r\n}\r\n\r\nonMounted(() => {\r\n  fetchAttackStats()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.welcome-section {\r\n  margin-top: 50px;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.center-row {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.feature-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 100%;\r\n  margin-bottom: 20px;\r\n  \r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 120px;\r\n}\r\n\r\n.mt-20 {\r\n  margin-top: 20px;\r\n}\r\n\r\n.stat-container {\r\n  padding: 10px;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n  padding: 15px;\r\n  background-color: #f5f7fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #409eff;\r\n}\r\n\r\n.stat-value.danger {\r\n  color: #f56c6c;\r\n}\r\n\r\n.stat-value.warning {\r\n  color: #e6a23c;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAqEA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,SAAS,GAAGL,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACD,SAAS,CAAC;;IAEvD;IACA,MAAME,QAAQ,GAAG,CACf;MACEC,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,yBAAyB;MACtCC,IAAI,EAAE,OAAO;MACbC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,uBAAuB;MACpCC,IAAI,EAAE,OAAO;MACbC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,+BAA+B;MAC5CC,IAAI,EAAE,SAAS;MACfC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,qBAAqB;MAClCC,IAAI,EAAE,SAAS;MACfC,UAAU,EAAE;IACd,CAAC,CACF;;IAED;IACA,MAAMC,WAAW,GAAGd,GAAG,CAAC;MACtBe,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE;IACV,CAAC,CAAC;;IAEF;IACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMZ,KAAK,CAACa,QAAQ,CAAC,iBAAiB,CAAC;QACvC,MAAMC,IAAI,GAAGd,KAAK,CAACE,KAAK,CAACa,UAAU;QAEnCP,WAAW,CAACQ,KAAK,GAAG;UAClBP,KAAK,EAAEK,IAAI,CAACG,MAAM;UAClBP,IAAI,EAAEI,IAAI,CAACI,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,KAAK,MAAM,CAAC,CAACH,MAAM;UACxDN,MAAM,EAAEG,IAAI,CAACI,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,KAAK,QAAQ,CAAC,CAACH;QACxD,CAAC;MACH,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;;IAED;IACA,MAAME,UAAU,GAAIC,IAAI,IAAK;MAC3BzB,MAAM,CAAC0B,IAAI,CAACD,IAAI,CAAC;IACnB,CAAC;IAED7B,SAAS,CAAC,MAAM;MACdiB,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}