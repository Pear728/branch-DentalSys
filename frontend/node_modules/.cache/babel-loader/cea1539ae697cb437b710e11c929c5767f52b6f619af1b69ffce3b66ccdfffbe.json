{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport axios from 'axios';\nVue.config.productionTip = false;\n\n// 使用ElementUI\nVue.use(ElementUI);\n\n// 配置axios\naxios.defaults.baseURL = 'http://localhost:8080';\nVue.prototype.$http = axios;\n\n// 添加请求拦截器，设置token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = token;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器，处理错误\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response && error.response.status === 401) {\n    // 未授权，跳转到登录页\n    router.push('/login');\n  }\n  return Promise.reject(error);\n});\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","store","ElementUI","axios","config","productionTip","use","defaults","baseURL","prototype","$http","interceptors","request","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","push","render","h","$mount"],"sources":["D:/Desktop/AI项目/进行中/20250415-WX-07/工作文件/dental-system/frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport axios from 'axios'\n\nVue.config.productionTip = false\n\n// 使用ElementUI\nVue.use(ElementUI)\n\n// 配置axios\naxios.defaults.baseURL = 'http://localhost:8080'\nVue.prototype.$http = axios\n\n// 添加请求拦截器，设置token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers.Authorization = token\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\n// 添加响应拦截器，处理错误\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n  if (error.response && error.response.status === 401) {\n    // 未授权，跳转到登录页\n    router.push('/login')\n  }\n  return Promise.reject(error)\n})\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAEzBL,GAAG,CAACM,MAAM,CAACC,aAAa,GAAG,KAAK;;AAEhC;AACAP,GAAG,CAACQ,GAAG,CAACJ,SAAS,CAAC;;AAElB;AACAC,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAChDV,GAAG,CAACW,SAAS,CAACC,KAAK,GAAGP,KAAK;;AAE3B;AACAA,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACN,GAAG,CAACF,MAAM,IAAI;EACvC,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTT,MAAM,CAACY,OAAO,CAACC,aAAa,GAAGJ,KAAK;EACtC;EACA,OAAOT,MAAM;AACf,CAAC,EAAEc,KAAK,IAAI;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAf,KAAK,CAACQ,YAAY,CAACU,QAAQ,CAACf,GAAG,CAACe,QAAQ,IAAI;EAC1C,OAAOA,QAAQ;AACjB,CAAC,EAAEH,KAAK,IAAI;EACV,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAtB,MAAM,CAACuB,IAAI,CAAC,QAAQ,CAAC;EACvB;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,IAAIpB,GAAG,CAAC;EACNE,MAAM;EACNC,KAAK;EACLuB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAAC1B,GAAG;AACpB,CAAC,CAAC,CAAC2B,MAAM,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}