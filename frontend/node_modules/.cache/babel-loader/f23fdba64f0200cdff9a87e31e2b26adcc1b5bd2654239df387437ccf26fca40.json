{"ast":null,"code":"import axios from 'axios';\n\n// 模拟API延迟\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// 检查是否使用模拟数据\nconst useMock = false; // 设置为false禁用模拟数据\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: 'http://localhost:8082/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  // 可以在此处添加身份验证令牌等\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 定义API函数\nexport default {\n  // 获取攻击日志\n  getAttackLogs() {\n    return api.get('/logs');\n  },\n  // 获取防御配置\n  getDefenseConfig() {\n    return api.get('/config');\n  },\n  // 更新防御配置\n  updateDefenseConfig(config) {\n    return api.post('/config', config);\n  },\n  // 运行XSS测试\n  runXssTest(payload) {\n    return api.post('/test', payload);\n  },\n  // 清空攻击日志\n  clearAttackLogs() {\n    return api.delete('/logs');\n  }\n};","map":{"version":3,"names":["axios","delay","ms","Promise","resolve","setTimeout","useMock","api","create","baseURL","timeout","headers","interceptors","request","use","config","error","reject","response","getAttackLogs","get","getDefenseConfig","updateDefenseConfig","post","runXssTest","payload","clearAttackLogs","delete"],"sources":["D:/Desktop/AI接单项目/进行中/20250321-WX-WEB-01/工作文件/xss-defense-system/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n// 模拟API延迟\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// 检查是否使用模拟数据\r\nconst useMock = false; // 设置为false禁用模拟数据\r\n\r\n// 创建axios实例\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8082/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n})\r\n\r\n// 请求拦截器\r\napi.interceptors.request.use(\r\n  config => {\r\n    // 可以在此处添加身份验证令牌等\r\n    return config\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\napi.interceptors.response.use(\r\n  response => {\r\n    return response\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 定义API函数\r\nexport default {\r\n  // 获取攻击日志\r\n  getAttackLogs() {\r\n    return api.get('/logs')\r\n  },\r\n  \r\n  // 获取防御配置\r\n  getDefenseConfig() {\r\n    return api.get('/config')\r\n  },\r\n  \r\n  // 更新防御配置\r\n  updateDefenseConfig(config) {\r\n    return api.post('/config', config)\r\n  },\r\n  \r\n  // 运行XSS测试\r\n  runXssTest(payload) {\r\n    return api.post('/test', payload)\r\n  },\r\n  \r\n  // 清空攻击日志\r\n  clearAttackLogs() {\r\n    return api.delete('/logs')\r\n  }\r\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,KAAK,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;;AAErE;AACA,MAAMI,OAAO,GAAG,KAAK,CAAC,CAAC;;AAEvB;AACA,MAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR;EACA,OAAOA,MAAM;AACf,CAAC,EACDC,KAAK,IAAI;EACP,OAAOb,OAAO,CAACc,MAAM,CAACD,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAT,GAAG,CAACK,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAC3BI,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDF,KAAK,IAAI;EACP,OAAOb,OAAO,CAACc,MAAM,CAACD,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,eAAe;EACb;EACAG,aAAaA,CAAA,EAAG;IACd,OAAOZ,GAAG,CAACa,GAAG,CAAC,OAAO,CAAC;EACzB,CAAC;EAED;EACAC,gBAAgBA,CAAA,EAAG;IACjB,OAAOd,GAAG,CAACa,GAAG,CAAC,SAAS,CAAC;EAC3B,CAAC;EAED;EACAE,mBAAmBA,CAACP,MAAM,EAAE;IAC1B,OAAOR,GAAG,CAACgB,IAAI,CAAC,SAAS,EAAER,MAAM,CAAC;EACpC,CAAC;EAED;EACAS,UAAUA,CAACC,OAAO,EAAE;IAClB,OAAOlB,GAAG,CAACgB,IAAI,CAAC,OAAO,EAAEE,OAAO,CAAC;EACnC,CAAC;EAED;EACAC,eAAeA,CAAA,EAAG;IAChB,OAAOnB,GAAG,CAACoB,MAAM,CAAC,OAAO,CAAC;EAC5B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}