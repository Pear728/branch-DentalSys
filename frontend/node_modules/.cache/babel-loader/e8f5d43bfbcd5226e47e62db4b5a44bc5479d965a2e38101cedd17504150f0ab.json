{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dbinfo-container\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"empty-info\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"empty-info\"\n};\nconst _hoisted_9 = {\n  class: \"query-form\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"log-detail\"\n};\nconst _hoisted_11 = {\n  class: \"payload-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", {\n    class: \"dbinfo-title\"\n  }, \"数据库信息\", -1 /* HOISTED */)), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"info-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"数据库连接信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.refreshDbInfo,\n          loading: $setup.loading\n        }, {\n          default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"刷新\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n          type: \"success\",\n          onClick: $setup.fixDatabase,\n          loading: $setup.fixLoading\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"修复数据库\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"loading\"])])])]),\n        default: _withCtx(() => [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton, {\n          rows: 5,\n          animated: \"\"\n        })])) : $setup.dbInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_descriptions, {\n          column: 1,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"连接状态\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: $setup.dbInfo.status === 'connected' ? 'success' : 'danger'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dbInfo.status === 'connected' ? '已连接' : '连接失败'), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"数据库URL\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dbInfo.url), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"数据库产品\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dbInfo.product), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"数据库版本\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dbInfo.version), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"驱动\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dbInfo.driver), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"攻击日志记录数\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_tag, {\n              type: \"info\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.dbInfo.logsCount || 0), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_el_empty, {\n          description: \"无法获取数据库信息\"\n        })]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"info-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"h3\", null, \"系统信息\")], -1 /* HOISTED */)])),\n        default: _withCtx(() => [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_el_skeleton, {\n          rows: 5,\n          animated: \"\"\n        })])) : $setup.sysInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_el_descriptions, {\n          column: 1,\n          border: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n            label: \"Java版本\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.sysInfo.javaVersion), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"Java供应商\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.sysInfo.javaVendor), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"操作系统\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.sysInfo.osName), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"系统版本\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.sysInfo.osVersion), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"系统架构\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.sysInfo.osArch), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_el_empty, {\n          description: \"无法获取系统信息\"\n        })]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), $setup.dbInfo && $setup.dbInfo.status === 'connected' ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"query-card\",\n    shadow: \"hover\"\n  }, {\n    header: _withCtx(() => _cache[5] || (_cache[5] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"h3\", null, \"查询攻击日志记录\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_form, {\n      inline: true\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"记录ID\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.logId,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.logId = $event),\n          placeholder: \"输入日志ID\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.fetchLogById,\n          loading: $setup.logLoading\n        }, {\n          default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"查询\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"loading\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]), $setup.logDetail ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_el_alert, {\n      title: \"数据库记录详情\",\n      type: \"success\",\n      closable: false,\n      \"show-icon\": \"\"\n    }), _createVNode(_component_el_descriptions, {\n      column: 1,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"记录ID\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.id), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"记录时间\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.formatDate($setup.logDetail.timestamp)), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"来源\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.source), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"IP地址\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.ipAddress), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"攻击载荷\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"pre\", null, _toDisplayString($setup.logDetail.payload), 1 /* TEXT */)])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"攻击类型\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.attackType), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"危险等级\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tag, {\n          type: $setup.getSeverityType($setup.logDetail.severity)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.severity), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"防御状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tag, {\n          type: $setup.logDetail.prevented ? 'success' : 'danger'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.prevented ? '已防御' : '未防御'), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"防御措施\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.logDetail.defenseMeasure), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_row","gutter","default","_withCtx","_component_el_col","span","_component_el_card","shadow","header","_hoisted_2","_component_el_button","type","onClick","$setup","refreshDbInfo","loading","_cache","_createTextVNode","_","fixDatabase","fixLoading","_hoisted_3","_component_el_skeleton","rows","animated","dbInfo","_hoisted_4","_component_el_descriptions","column","border","_component_el_descriptions_item","label","_component_el_tag","status","_toDisplayString","url","product","version","driver","logsCount","_hoisted_5","_component_el_empty","description","_hoisted_6","sysInfo","_hoisted_7","javaVersion","javaVendor","osName","osVersion","osArch","_hoisted_8","_createBlock","_hoisted_9","_component_el_form","inline","_component_el_form_item","_component_el_input","modelValue","logId","$event","placeholder","fetchLogById","logLoading","logDetail","_hoisted_10","_component_el_alert","title","closable","id","formatDate","timestamp","source","ipAddress","_hoisted_11","payload","attackType","getSeverityType","severity","prevented","defenseMeasure","_createCommentVNode"],"sources":["D:\\Desktop\\AI接单项目\\进行中\\20250321-WX-WEB-01\\工作文件\\xss-defense-system\\frontend\\src\\views\\DatabaseInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"dbinfo-container\">\r\n    <h2 class=\"dbinfo-title\">数据库信息</h2>\r\n\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"info-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h3>数据库连接信息</h3>\r\n              <div>\r\n                <el-button type=\"primary\" @click=\"refreshDbInfo\" :loading=\"loading\">刷新</el-button>\r\n                <el-button type=\"success\" @click=\"fixDatabase\" :loading=\"fixLoading\">修复数据库</el-button>\r\n              </div>\r\n            </div>\r\n          </template>\r\n\r\n          <div v-if=\"loading\" class=\"loading-container\">\r\n            <el-skeleton :rows=\"5\" animated />\r\n          </div>\r\n\r\n          <div v-else-if=\"dbInfo\">\r\n            <el-descriptions :column=\"1\" border>\r\n              <el-descriptions-item label=\"连接状态\">\r\n                <el-tag :type=\"dbInfo.status === 'connected' ? 'success' : 'danger'\">\r\n                  {{ dbInfo.status === 'connected' ? '已连接' : '连接失败' }}\r\n                </el-tag>\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"数据库URL\">{{ dbInfo.url }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"数据库产品\">{{ dbInfo.product }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"数据库版本\">{{ dbInfo.version }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"驱动\">{{ dbInfo.driver }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"攻击日志记录数\">\r\n                <el-tag type=\"info\">{{ dbInfo.logsCount || 0 }}</el-tag>\r\n              </el-descriptions-item>\r\n            </el-descriptions>\r\n          </div>\r\n\r\n          <div v-else class=\"empty-info\">\r\n            <el-empty description=\"无法获取数据库信息\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"info-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h3>系统信息</h3>\r\n            </div>\r\n          </template>\r\n\r\n          <div v-if=\"loading\" class=\"loading-container\">\r\n            <el-skeleton :rows=\"5\" animated />\r\n          </div>\r\n\r\n          <div v-else-if=\"sysInfo\">\r\n            <el-descriptions :column=\"1\" border>\r\n              <el-descriptions-item label=\"Java版本\">{{ sysInfo.javaVersion }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"Java供应商\">{{ sysInfo.javaVendor }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"操作系统\">{{ sysInfo.osName }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"系统版本\">{{ sysInfo.osVersion }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"系统架构\">{{ sysInfo.osArch }}</el-descriptions-item>\r\n            </el-descriptions>\r\n          </div>\r\n\r\n          <div v-else class=\"empty-info\">\r\n            <el-empty description=\"无法获取系统信息\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-card v-if=\"dbInfo && dbInfo.status === 'connected'\" class=\"query-card\" shadow=\"hover\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>查询攻击日志记录</h3>\r\n        </div>\r\n      </template>\r\n\r\n      <div class=\"query-form\">\r\n        <el-form :inline=\"true\">\r\n          <el-form-item label=\"记录ID\">\r\n            <el-input v-model=\"logId\" placeholder=\"输入日志ID\" />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"fetchLogById\" :loading=\"logLoading\">查询</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n\r\n      <div v-if=\"logDetail\" class=\"log-detail\">\r\n        <el-alert\r\n          title=\"数据库记录详情\"\r\n          type=\"success\"\r\n          :closable=\"false\"\r\n          show-icon\r\n        />\r\n        \r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"记录ID\">{{ logDetail.id }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"记录时间\">{{ formatDate(logDetail.timestamp) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"来源\">{{ logDetail.source }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"IP地址\">{{ logDetail.ipAddress }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"攻击载荷\">\r\n            <div class=\"payload-container\">\r\n              <pre>{{ logDetail.payload }}</pre>\r\n            </div>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"攻击类型\">{{ logDetail.attackType }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"危险等级\">\r\n            <el-tag :type=\"getSeverityType(logDetail.severity)\">{{ logDetail.severity }}</el-tag>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"防御状态\">\r\n            <el-tag :type=\"logDetail.prevented ? 'success' : 'danger'\">\r\n              {{ logDetail.prevented ? '已防御' : '未防御' }}\r\n            </el-tag>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"防御措施\">{{ logDetail.defenseMeasure }}</el-descriptions-item>\r\n        </el-descriptions>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst store = useStore()\r\nconst loading = ref(false)\r\nconst dbInfo = ref(null)\r\nconst sysInfo = ref(null)\r\nconst logId = ref('')\r\nconst logDetail = ref(null)\r\nconst logLoading = ref(false)\r\nconst fixLoading = ref(false)\r\n\r\n// 获取数据库信息\r\nconst refreshDbInfo = async () => {\r\n  loading.value = true\r\n  try {\r\n    dbInfo.value = await store.dispatch('getDatabaseInfo')\r\n    sysInfo.value = await store.dispatch('getSystemInfo')\r\n  } catch (error) {\r\n    console.error('获取信息失败:', error)\r\n    ElMessage.error('获取数据库信息失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 根据ID查询日志\r\nconst fetchLogById = async () => {\r\n  if (!logId.value) {\r\n    ElMessage.warning('请输入日志ID')\r\n    return\r\n  }\r\n  \r\n  logLoading.value = true\r\n  try {\r\n    const log = await store.dispatch('fetchAttackLogById', logId.value)\r\n    if (log) {\r\n      logDetail.value = log\r\n    } else {\r\n      ElMessage.warning(`未找到ID为${logId.value}的日志记录`)\r\n      logDetail.value = null\r\n    }\r\n  } catch (error) {\r\n    console.error('获取日志失败:', error)\r\n    ElMessage.error('获取日志记录失败')\r\n  } finally {\r\n    logLoading.value = false\r\n  }\r\n}\r\n\r\n// 获取危险等级对应的tag类型\r\nconst getSeverityType = (severity) => {\r\n  switch(severity) {\r\n    case 'high': return 'danger'\r\n    case 'medium': return 'warning'\r\n    default: return 'info'\r\n  }\r\n}\r\n\r\n// 日期格式化\r\nconst formatDate = (dateStr) => {\r\n  if (!dateStr) return ''\r\n  const date = new Date(dateStr)\r\n  return date.toLocaleString()\r\n}\r\n\r\n// 修复数据库\r\nconst fixDatabase = async () => {\r\n  fixLoading.value = true\r\n  try {\r\n    await store.dispatch('fixDatabase')\r\n    ElMessage.success('数据库修复成功')\r\n    await refreshDbInfo()\r\n  } catch (error) {\r\n    console.error('修复数据库失败:', error)\r\n    ElMessage.error('修复数据库失败')\r\n  } finally {\r\n    fixLoading.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  refreshDbInfo()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.dbinfo-container {\r\n    ma\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.dbinfo-title {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-card {\r\n  height: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.query-card {\r\n  margin-top: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px;\r\n}\r\n\r\n.empty-info {\r\n  padding: 40px 0;\r\n}\r\n\r\n.query-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.log-detail {\r\n  margin-top: 20px;\r\n}\r\n\r\n.payload-container {\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  margin: 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}