{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { analyzeXssSeverity } from '../utils/xssUtils';\nexport default {\n  __name: 'AttackLogs',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const isLoading = computed(() => store.state.isLoading);\n    const attackLogs = computed(() => store.state.attackLogs);\n    const dialogVisible = ref(false);\n    const selectedLog = ref(null);\n\n    // 获取攻击日志\n    const refreshLogs = async () => {\n      await store.dispatch('fetchAttackLogs');\n    };\n\n    // 清空日志\n    const clearLogs = async () => {\n      try {\n        // 实际应用中会调用API\n        // await api.clearAttackLogs()\n\n        // 前端模拟清空\n        store.commit('SET_ATTACK_LOGS', []);\n        ElMessage.success('日志已清空');\n      } catch (error) {\n        console.error('Failed to clear logs:', error);\n        ElMessage.error('清空日志失败');\n      }\n    };\n\n    // 显示日志详情\n    const showLogDetail = log => {\n      selectedLog.value = log;\n      dialogVisible.value = true;\n    };\n\n    // 获取攻击分析\n    const getAttackAnalysis = log => {\n      const payloadType = getAttackType(log.payload);\n      const severity = log.severity || analyzeXssSeverity(log.payload);\n      if (severity === 'high') {\n        return `此攻击为${payloadType}，危险等级高。它可能尝试窃取敏感信息（如cookies）或在用户的浏览器上执行恶意代码。${log.prevented ? '系统已成功拦截此攻击。' : '警告：此攻击未被防御！'}`;\n      } else if (severity === 'medium') {\n        return `此攻击为${payloadType}，危险等级中。它可能尝试修改页面内容或执行有限的恶意脚本。${log.prevented ? '系统已成功拦截此攻击。' : '警告：此攻击未被防御！'}`;\n      } else {\n        return `此攻击为${payloadType}，危险等级低。它可能是简单的测试或低风险的脚本注入尝试。${log.prevented ? '系统已成功拦截此攻击。' : '警告：此攻击未被防御！'}`;\n      }\n    };\n\n    // 辅助函数：获取危险等级对应的tag类型\n    const getSeverityType = severity => {\n      switch (severity) {\n        case 'high':\n          return 'danger';\n        case 'medium':\n          return 'warning';\n        default:\n          return 'info';\n      }\n    };\n\n    // 辅助函数：确定攻击类型\n    const getAttackType = payload => {\n      if (!payload) return '未知攻击';\n      if (payload.includes('<script')) {\n        return '脚本注入攻击';\n      } else if (payload.includes('onerror') || payload.includes('onload')) {\n        return '事件处理注入攻击';\n      } else if (payload.includes('javascript:')) {\n        return 'JavaScript 伪协议攻击';\n      } else {\n        return 'XSS攻击';\n      }\n    };\n\n    // 日期格式化\n    const formatDate = dateStr => {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return date.toLocaleString();\n    };\n    onMounted(() => {\n      refreshLogs();\n    });\n    const __returned__ = {\n      store,\n      isLoading,\n      attackLogs,\n      dialogVisible,\n      selectedLog,\n      refreshLogs,\n      clearLogs,\n      showLogDetail,\n      getAttackAnalysis,\n      getSeverityType,\n      getAttackType,\n      formatDate,\n      ref,\n      computed,\n      onMounted,\n      get useStore() {\n        return useStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get analyzeXssSeverity() {\n        return analyzeXssSeverity;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","ElMessage","analyzeXssSeverity","store","isLoading","state","attackLogs","dialogVisible","selectedLog","refreshLogs","dispatch","clearLogs","commit","success","error","console","showLogDetail","log","value","getAttackAnalysis","payloadType","getAttackType","payload","severity","prevented","getSeverityType","includes","formatDate","dateStr","date","Date","toLocaleString"],"sources":["D:/Desktop/AI接单项目/进行中/20250321-WX-WEB-01/工作文件/xss-defense-system/frontend/src/views/AttackLogs.vue"],"sourcesContent":["<template>\r\n  <div class=\"logs-container\">\r\n    <h2 class=\"logs-title\">XSS攻击日志</h2>\r\n\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>攻击记录</h3>\r\n          <div>\r\n            <el-button type=\"primary\" @click=\"refreshLogs\" :loading=\"isLoading\">刷新</el-button>\r\n            <el-button type=\"danger\" @click=\"clearLogs\">清空日志</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <div v-if=\"isLoading\" class=\"loading-container\">\r\n        <el-skeleton :rows=\"5\" animated />\r\n      </div>\r\n\r\n      <div v-else-if=\"attackLogs.length === 0\" class=\"empty-logs\">\r\n        <el-empty description=\"暂无攻击日志记录\" />\r\n      </div>\r\n\r\n      <div v-else>\r\n        <el-table\r\n          :data=\"attackLogs\"\r\n          style=\"width: 100%\"\r\n          :default-sort=\"{ prop: 'timestamp', order: 'descending' }\"\r\n        >\r\n          <el-table-column prop=\"timestamp\" label=\"时间\" sortable width=\"180\">\r\n            <template #default=\"scope\">\r\n              {{ formatDate(scope.row.timestamp) }}\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"severity\" label=\"危险等级\" width=\"100\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"getSeverityType(scope.row.severity)\">\r\n                {{ scope.row.severity }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"source\" label=\"来源\" width=\"120\" />\r\n\r\n          <el-table-column prop=\"prevented\" label=\"防御状态\" width=\"100\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"scope.row.prevented ? 'success' : 'danger'\">\r\n                {{ scope.row.prevented ? '已防御' : '未防御' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"payload\" label=\"攻击载荷\">\r\n            <template #default=\"scope\">\r\n              <el-tooltip\r\n                :content=\"scope.row.payload\"\r\n                placement=\"top\"\r\n                :show-after=\"300\"\r\n              >\r\n                <span class=\"ellipsis-text\">{{ scope.row.payload }}</span>\r\n              </el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\r\n            <template #default=\"scope\">\r\n              <el-button link type=\"primary\" @click=\"showLogDetail(scope.row)\">详情</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 攻击详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      title=\"攻击详情\"\r\n      width=\"60%\"\r\n    >\r\n      <el-descriptions v-if=\"selectedLog\" direction=\"vertical\" :column=\"1\" border>\r\n        <el-descriptions-item label=\"ID\">{{ selectedLog.id }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"时间\">{{ formatDate(selectedLog.timestamp) }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"危险等级\">\r\n          <el-tag :type=\"getSeverityType(selectedLog.severity)\">{{ selectedLog.severity }}</el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"来源\">{{ selectedLog.source }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"防御状态\">\r\n          <el-tag :type=\"selectedLog.prevented ? 'success' : 'danger'\">\r\n            {{ selectedLog.prevented ? '已防御' : '未防御' }}\r\n          </el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"攻击载荷\">\r\n          <div class=\"payload-container\">\r\n            <pre>{{ selectedLog.payload }}</pre>\r\n          </div>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"攻击分析\">\r\n          {{ getAttackAnalysis(selectedLog) }}\r\n        </el-descriptions-item>\r\n      </el-descriptions>\r\n\r\n      <template #footer>\r\n        <span>\r\n          <el-button @click=\"dialogVisible = false\">关闭</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\nimport { analyzeXssSeverity } from '../utils/xssUtils'\r\n\r\nconst store = useStore()\r\nconst isLoading = computed(() => store.state.isLoading)\r\nconst attackLogs = computed(() => store.state.attackLogs)\r\nconst dialogVisible = ref(false)\r\nconst selectedLog = ref(null)\r\n\r\n// 获取攻击日志\r\nconst refreshLogs = async () => {\r\n  await store.dispatch('fetchAttackLogs')\r\n}\r\n\r\n// 清空日志\r\nconst clearLogs = async () => {\r\n  try {\r\n    // 实际应用中会调用API\r\n    // await api.clearAttackLogs()\r\n\r\n    // 前端模拟清空\r\n    store.commit('SET_ATTACK_LOGS', [])\r\n    ElMessage.success('日志已清空')\r\n  } catch (error) {\r\n    console.error('Failed to clear logs:', error)\r\n    ElMessage.error('清空日志失败')\r\n  }\r\n}\r\n\r\n// 显示日志详情\r\nconst showLogDetail = (log) => {\r\n  selectedLog.value = log\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 获取攻击分析\r\nconst getAttackAnalysis = (log) => {\r\n  const payloadType = getAttackType(log.payload)\r\n  const severity = log.severity || analyzeXssSeverity(log.payload)\r\n\r\n  if (severity === 'high') {\r\n    return `此攻击为${payloadType}，危险等级高。它可能尝试窃取敏感信息（如cookies）或在用户的浏览器上执行恶意代码。${log.prevented ? '系统已成功拦截此攻击。' : '警告：此攻击未被防御！'}`\r\n  } else if (severity === 'medium') {\r\n    return `此攻击为${payloadType}，危险等级中。它可能尝试修改页面内容或执行有限的恶意脚本。${log.prevented ? '系统已成功拦截此攻击。' : '警告：此攻击未被防御！'}`\r\n  } else {\r\n    return `此攻击为${payloadType}，危险等级低。它可能是简单的测试或低风险的脚本注入尝试。${log.prevented ? '系统已成功拦截此攻击。' : '警告：此攻击未被防御！'}`\r\n  }\r\n}\r\n\r\n// 辅助函数：获取危险等级对应的tag类型\r\nconst getSeverityType = (severity) => {\r\n  switch(severity) {\r\n    case 'high': return 'danger'\r\n    case 'medium': return 'warning'\r\n    default: return 'info'\r\n  }\r\n}\r\n\r\n// 辅助函数：确定攻击类型\r\nconst getAttackType = (payload) => {\r\n  if (!payload) return '未知攻击'\r\n\r\n  if (payload.includes('<script')) {\r\n    return '脚本注入攻击'\r\n  } else if (payload.includes('onerror') || payload.includes('onload')) {\r\n    return '事件处理注入攻击'\r\n  } else if (payload.includes('javascript:')) {\r\n    return 'JavaScript 伪协议攻击'\r\n  } else {\r\n    return 'XSS攻击'\r\n  }\r\n}\r\n\r\n// 日期格式化\r\nconst formatDate = (dateStr) => {\r\n  if (!dateStr) return ''\r\n  const date = new Date(dateStr)\r\n  return date.toLocaleString()\r\n}\r\n\r\nonMounted(() => {\r\n  refreshLogs()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.logs-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.logs-title {\r\n  margin-top: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.loading-container {\r\n  padding: 20px;\r\n}\r\n\r\n.empty-logs {\r\n  padding: 40px 0;\r\n}\r\n\r\n.ellipsis-text {\r\n  display: inline-block;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.payload-container {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  background-color: #f5f7fa;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  margin: 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}