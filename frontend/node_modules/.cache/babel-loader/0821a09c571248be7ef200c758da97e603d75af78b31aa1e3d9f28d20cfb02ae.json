{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'PatientHome',\n  data() {\n    return {\n      recentAppointments: [],\n      unpaidAppointments: [],\n      doctorList: [],\n      announcements: [{\n        title: '口腔健康日活动通知',\n        content: '9月20日是全国爱牙日，我院将举办免费口腔检查活动，欢迎广大市民参与。',\n        time: '2025-04-10'\n      }, {\n        title: '系统维护通知',\n        content: '系统将于本周六凌晨2:00-4:00进行维护升级，期间预约功能暂停使用。',\n        time: '2025-04-12'\n      }, {\n        title: '新设备投入使用',\n        content: '我院新引进的德国3D口腔扫描仪已正式投入使用，为患者提供更精准的诊疗方案。',\n        time: '2025-04-14'\n      }]\n    };\n  },\n  computed: {\n    ...mapGetters(['currentUser'])\n  },\n  mounted() {\n    this.fetchDoctors();\n    this.fetchRecentAppointments();\n    this.fetchUnpaidAppointments();\n  },\n  methods: {\n    // 获取医生列表\n    fetchDoctors() {\n      this.$http.get('/user/doctors').then(response => {\n        if (response.data.code === 200) {\n          this.doctorList = response.data.data || [];\n        }\n      }).catch(error => {\n        console.error('获取医生列表错误:', error);\n      });\n    },\n    fetchRecentAppointments() {\n      // 获取患者近期预约\n      this.$http.get(`/appointment/patient/${this.currentUser.id}`).then(response => {\n        if (response.data.code === 200) {\n          // 获取最近5条预约记录\n          this.recentAppointments = response.data.data.slice(0, 5).map(item => {\n            // 通过医生列表查找医生名称\n            const doctor = this.doctorList.find(doc => doc.id === item.doctorId);\n            return {\n              ...item,\n              doctorName: doctor ? doctor.realName : `医生`\n            };\n          });\n        }\n      }).catch(error => {\n        console.error('获取预约记录失败:', error);\n      });\n    },\n    fetchUnpaidAppointments() {\n      // 获取患者未支付的预约\n      this.$http.get(`/appointment/patient/${this.currentUser.id}`).then(response => {\n        if (response.data.code === 200) {\n          // 筛选未支付的预约\n          this.unpaidAppointments = response.data.data.filter(item => item.paymentStatus === 0) // 使用paymentStatus而不是isPaid\n          .slice(0, 3);\n        }\n      }).catch(error => {\n        console.error('获取未支付预约失败:', error);\n      });\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    },\n    getStatusText(status) {\n      switch (status) {\n        case 0:\n          return '待确认';\n        case 1:\n          return '已确认';\n        case 2:\n          return '已完成';\n        case 3:\n          return '已取消';\n        default:\n          return '未知状态';\n      }\n    },\n    getStatusClass(status) {\n      switch (status) {\n        case 0:\n          return 'status-pending';\n        case 1:\n          return 'status-confirmed';\n        case 2:\n          return 'status-completed';\n        case 3:\n          return 'status-canceled';\n        default:\n          return '';\n      }\n    },\n    goToAppointment() {\n      this.$router.push('/patient/appointment');\n    },\n    goToPayment() {\n      this.$router.push('/patient/payment');\n    },\n    handlePay(item) {\n      this.$router.push({\n        path: '/patient/payment',\n        query: {\n          appointmentId: item.id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","recentAppointments","unpaidAppointments","doctorList","announcements","title","content","time","computed","mounted","fetchDoctors","fetchRecentAppointments","fetchUnpaidAppointments","methods","$http","get","then","response","code","catch","error","console","currentUser","id","slice","map","item","doctor","find","doc","doctorId","doctorName","realName","filter","paymentStatus","formatDate","dateString","date","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getStatusText","status","getStatusClass","goToAppointment","$router","push","goToPayment","handlePay","path","query","appointmentId"],"sources":["src/views/patient/Home.vue"],"sourcesContent":["<template>\n  <div class=\"patient-home\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"16\">\n        <el-card class=\"welcome-card\">\n          <div class=\"welcome-message\">\n            <h2>您好，{{ currentUser.realName }}！</h2>\n            <p>欢迎使用智能齿科就诊系统患者端</p>\n          </div>\n          <div class=\"welcome-tips\">\n            <h3>使用提示：</h3>\n            <ul>\n              <li>您可以通过\"在线预约\"功能选择医生和时段进行挂号</li>\n              <li>在\"病历查询\"中可以查看您的历史就诊记录</li>\n              <li>\"缴费管理\"可以处理您的待缴费项目</li>\n              <li>有任何问题请联系医院客服电话：0755-12345678</li>\n            </ul>\n          </div>\n        </el-card>\n        \n        <el-card class=\"announcement-card\">\n          <div slot=\"header\">\n            <span>医院公告</span>\n          </div>\n          <div class=\"announcement-content\">\n            <div class=\"announcement-item\" v-for=\"(item, index) in announcements\" :key=\"index\">\n              <h4>{{ item.title }}</h4>\n              <p>{{ item.content }}</p>\n              <div class=\"announcement-time\">{{ item.time }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"8\">\n        <el-card class=\"appointment-card\">\n          <div slot=\"header\">\n            <span>近期预约</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"goToAppointment\">\n              <i class=\"el-icon-plus\"></i> 新预约\n            </el-button>\n          </div>\n          <div v-if=\"recentAppointments.length > 0\">\n            <div class=\"appointment-item\" v-for=\"appointment in recentAppointments\" :key=\"appointment.id\">\n              <div class=\"appointment-info\">\n                <div class=\"appointment-doctor\">{{ appointment.doctorName }}</div>\n                <div class=\"appointment-time\">{{ appointment.appointmentDate }} {{ appointment.appointmentTime }}</div>\n              </div>\n              <div class=\"appointment-status\" :class=\"getStatusClass(appointment.status)\">\n                {{ getStatusText(appointment.status) }}\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"empty-data\">\n            <i class=\"el-icon-date\"></i>\n            <p>暂无近期预约</p>\n          </div>\n        </el-card>\n        \n        <el-card class=\"payment-card\">\n          <div slot=\"header\">\n            <span>缴费提醒</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"goToPayment\">\n              查看全部\n            </el-button>\n          </div>\n          <div v-if=\"unpaidAppointments.length > 0\">\n            <div class=\"payment-item\" v-for=\"item in unpaidAppointments\" :key=\"item.id\">\n              <div class=\"payment-info\">\n                <div class=\"payment-title\">预约号: {{ item.id }}</div>\n                <div class=\"payment-amount\">金额: ¥{{ item.paymentAmount }}</div>\n              </div>\n              <el-button size=\"mini\" type=\"primary\" @click=\"handlePay(item)\">缴费</el-button>\n            </div>\n          </div>\n          <div v-else class=\"empty-data\">\n            <i class=\"el-icon-wallet\"></i>\n            <p>暂无待缴费项目</p>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'PatientHome',\n  data() {\n    return {\n      recentAppointments: [],\n      unpaidAppointments: [],\n      doctorList: [],\n      announcements: [\n        {\n          title: '口腔健康日活动通知',\n          content: '9月20日是全国爱牙日，我院将举办免费口腔检查活动，欢迎广大市民参与。',\n          time: '2025-04-10'\n        },\n        {\n          title: '系统维护通知',\n          content: '系统将于本周六凌晨2:00-4:00进行维护升级，期间预约功能暂停使用。',\n          time: '2025-04-12'\n        },\n        {\n          title: '新设备投入使用',\n          content: '我院新引进的德国3D口腔扫描仪已正式投入使用，为患者提供更精准的诊疗方案。',\n          time: '2025-04-14'\n        }\n      ]\n    }\n  },\n  computed: {\n    ...mapGetters(['currentUser'])\n  },\n  mounted() {\n    this.fetchDoctors()\n    this.fetchRecentAppointments()\n    this.fetchUnpaidAppointments()\n  },\n  methods: {\n    // 获取医生列表\n    fetchDoctors() {\n      this.$http.get('/user/doctors')\n        .then(response => {\n          if (response.data.code === 200) {\n            this.doctorList = response.data.data || []\n          }\n        })\n        .catch(error => {\n          console.error('获取医生列表错误:', error)\n        })\n    },\n    \n    fetchRecentAppointments() {\n      // 获取患者近期预约\n      this.$http.get(`/appointment/patient/${this.currentUser.id}`)\n        .then(response => {\n          if (response.data.code === 200) {\n            // 获取最近5条预约记录\n            this.recentAppointments = response.data.data\n              .slice(0, 5)\n              .map(item => {\n                // 通过医生列表查找医生名称\n                const doctor = this.doctorList.find(doc => doc.id === item.doctorId)\n                return {\n                  ...item,\n                  doctorName: doctor ? doctor.realName : `医生`\n                }\n              })\n          }\n        })\n        .catch(error => {\n          console.error('获取预约记录失败:', error)\n        })\n    },\n    fetchUnpaidAppointments() {\n      // 获取患者未支付的预约\n      this.$http.get(`/appointment/patient/${this.currentUser.id}`)\n        .then(response => {\n          if (response.data.code === 200) {\n            // 筛选未支付的预约\n            this.unpaidAppointments = response.data.data\n              .filter(item => item.paymentStatus === 0) // 使用paymentStatus而不是isPaid\n              .slice(0, 3)\n          }\n        })\n        .catch(error => {\n          console.error('获取未支付预约失败:', error)\n        })\n    },\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const date = new Date(dateString)\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n    getStatusText(status) {\n      switch (status) {\n        case 0: return '待确认'\n        case 1: return '已确认'\n        case 2: return '已完成'\n        case 3: return '已取消'\n        default: return '未知状态'\n      }\n    },\n    getStatusClass(status) {\n      switch (status) {\n        case 0: return 'status-pending'\n        case 1: return 'status-confirmed'\n        case 2: return 'status-completed'\n        case 3: return 'status-canceled'\n        default: return ''\n      }\n    },\n    goToAppointment() {\n      this.$router.push('/patient/appointment')\n    },\n    goToPayment() {\n      this.$router.push('/patient/payment')\n    },\n    handlePay(item) {\n      this.$router.push({\n        path: '/patient/payment',\n        query: { appointmentId: item.id }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.patient-home {\n  height: 100%;\n}\n\n.welcome-card {\n  margin-bottom: 20px;\n  background-color: #f0f9eb;\n}\n\n.welcome-message {\n  margin-bottom: 20px;\n}\n\n.welcome-message h2 {\n  margin-top: 0;\n  color: #67c23a;\n}\n\n.welcome-tips ul {\n  padding-left: 20px;\n}\n\n.welcome-tips li {\n  margin-bottom: 8px;\n}\n\n.announcement-card,\n.appointment-card,\n.payment-card {\n  margin-bottom: 20px;\n}\n\n.announcement-item {\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px dashed #eee;\n}\n\n.announcement-item:last-child {\n  border-bottom: none;\n  margin-bottom: 0;\n}\n\n.announcement-item h4 {\n  margin-top: 0;\n  margin-bottom: 8px;\n  color: #333;\n}\n\n.announcement-time {\n  text-align: right;\n  color: #999;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.appointment-item,\n.payment-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.appointment-item:last-child,\n.payment-item:last-child {\n  border-bottom: none;\n}\n\n.appointment-doctor,\n.payment-title {\n  font-weight: bold;\n}\n\n.appointment-time,\n.payment-amount {\n  color: #666;\n  font-size: 13px;\n  margin-top: 5px;\n}\n\n.appointment-status {\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.status-pending {\n  background-color: #e6a23c;\n  color: white;\n}\n\n.status-confirmed {\n  background-color: #409eff;\n  color: white;\n}\n\n.status-completed {\n  background-color: #67c23a;\n  color: white;\n}\n\n.status-canceled {\n  background-color: #f56c6c;\n  color: white;\n}\n\n.empty-data {\n  text-align: center;\n  padding: 20px 0;\n  color: #909399;\n}\n\n.empty-data i {\n  font-size: 30px;\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}