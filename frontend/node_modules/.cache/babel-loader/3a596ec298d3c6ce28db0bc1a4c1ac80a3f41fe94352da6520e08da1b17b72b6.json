{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"xss-test-container\"\n};\nconst _hoisted_2 = {\n  class: \"vector-type\"\n};\nconst _hoisted_3 = {\n  class: \"result-section\"\n};\nconst _hoisted_4 = {\n  class: \"danger-content\"\n};\nconst _hoisted_5 = {\n  class: \"render-container\"\n};\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = {\n  class: \"result-section\"\n};\nconst _hoisted_8 = {\n  class: \"safe-content\"\n};\nconst _hoisted_9 = {\n  class: \"render-container\"\n};\nconst _hoisted_10 = {\n  class: \"render-box\"\n};\nconst _hoisted_11 = {\n  class: \"analysis-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _directive_safe_html = _resolveDirective(\"safe-html\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[20] || (_cache[20] = _createElementVNode(\"h2\", {\n    class: \"xss-test-title\"\n  }, \"XSS攻击测试\", -1 /* HOISTED */)), _createVNode(_component_el_card, {\n    class: \"test-card\"\n  }, {\n    header: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"h3\", null, \"测试XSS攻击载荷\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.testForm,\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"输入类型\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n          modelValue: $setup.testForm.inputType,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.testForm.inputType = $event)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio, {\n            label: \"manual\"\n          }, {\n            default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"手动输入\")])),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_radio, {\n            label: \"predefined\"\n          }, {\n            default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"预设载荷\")])),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), $setup.testForm.inputType === 'predefined' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"选择预设载荷\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.testForm.selectedVector,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.testForm.selectedVector = $event),\n          placeholder: \"选择XSS载荷\",\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.xssVectors, vector => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: vector.payload,\n              label: vector.name,\n              value: vector.payload\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString(vector.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_2, _toDisplayString(vector.type), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n          }), 128 /* KEYED_FRAGMENT */))]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.testForm.inputType === 'manual' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"XSS载荷\"\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"SafeInput\"], {\n          modelValue: $setup.testForm.payload,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.testForm.payload = $event),\n          placeholder: \"输入一个XSS载荷...\",\n          sanitize: false,\n          onXssDetected: $setup.handleXssDetected\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_form_item, {\n        label: \"防御设置\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n          modelValue: $setup.testForm.defenseOptions.inputValidation,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.testForm.defenseOptions.inputValidation = $event)\n        }, {\n          default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"输入验证\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_checkbox, {\n          modelValue: $setup.testForm.defenseOptions.outputEncoding,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.testForm.defenseOptions.outputEncoding = $event)\n        }, {\n          default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"输出编码\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_checkbox, {\n          modelValue: $setup.testForm.defenseOptions.csp,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.testForm.defenseOptions.csp = $event)\n        }, {\n          default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"内容安全策略\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.runTest,\n          loading: $setup.loading\n        }, {\n          default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"运行测试\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n          onClick: $setup.resetForm\n        }, {\n          default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"重置\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }), $setup.testResult ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"result-card\"\n  }, {\n    header: _withCtx(() => _cache[14] || (_cache[14] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"h3\", null, \"测试结果\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_cache[16] || (_cache[16] = _createElementVNode(\"h4\", null, \"防御前 (原始输入)\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"pre\", null, _toDisplayString($setup.testResult.originalPayload), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_cache[15] || (_cache[15] = _createElementVNode(\"h5\", null, \"渲染结果:\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n          class: \"render-box\",\n          innerHTML: $setup.testResult.originalPayload\n        }, null, 8 /* PROPS */, _hoisted_6)])])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 12\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_cache[18] || (_cache[18] = _createElementVNode(\"h4\", null, \"防御后\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"pre\", null, _toDisplayString($setup.testResult.sanitizedPayload), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[17] || (_cache[17] = _createElementVNode(\"h5\", null, \"渲染结果:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"div\", _hoisted_10, null, 512 /* NEED_PATCH */), [[_directive_safe_html, $setup.testResult.sanitizedPayload]])])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_divider), _createElementVNode(\"div\", _hoisted_11, [_cache[19] || (_cache[19] = _createElementVNode(\"h4\", null, \"攻击分析\", -1 /* HOISTED */)), _createVNode(_component_el_descriptions, {\n      column: 1,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"攻击类型\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.testResult.attackType), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"危险等级\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tag, {\n          type: $setup.getSeverityType($setup.testResult.severity)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.testResult.severity), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"防御效果\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tag, {\n          type: $setup.testResult.prevented ? 'success' : 'danger'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.testResult.prevented ? '成功防御' : '防御失败'), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"分析说明\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.testResult.description), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_card","header","_withCtx","_cache","default","_component_el_form","model","$setup","testForm","_component_el_form_item","label","_component_el_radio_group","modelValue","inputType","$event","_component_el_radio","_createTextVNode","_","_createBlock","key","_component_el_select","selectedVector","placeholder","style","_Fragment","_renderList","xssVectors","vector","_component_el_option","payload","name","value","_toDisplayString","_hoisted_2","type","_createCommentVNode","sanitize","onXssDetected","handleXssDetected","_component_el_checkbox","defenseOptions","inputValidation","outputEncoding","csp","_component_el_button","onClick","runTest","loading","resetForm","testResult","_component_el_row","gutter","_component_el_col","span","_hoisted_3","_hoisted_4","originalPayload","_hoisted_5","innerHTML","_hoisted_6","_hoisted_7","_hoisted_8","sanitizedPayload","_hoisted_9","_hoisted_10","_component_el_divider","_hoisted_11","_component_el_descriptions","column","border","_component_el_descriptions_item","attackType","_component_el_tag","getSeverityType","severity","prevented","description"],"sources":["D:\\Desktop\\AI接单项目\\进行中\\20250321-WX-WEB-01\\工作文件\\xss-defense-system\\frontend\\src\\views\\XssTest.vue"],"sourcesContent":["<!-- eslint-disable -->\r\n<template>\r\n  <div class=\"xss-test-container\">\r\n    <h2 class=\"xss-test-title\">XSS攻击测试</h2>\r\n\r\n    <el-card class=\"test-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>测试XSS攻击载荷</h3>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form :model=\"testForm\" label-width=\"120px\">\r\n        <el-form-item label=\"输入类型\">\r\n          <el-radio-group v-model=\"testForm.inputType\">\r\n            <el-radio label=\"manual\">手动输入</el-radio>\r\n            <el-radio label=\"predefined\">预设载荷</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <el-form-item v-if=\"testForm.inputType === 'predefined'\" label=\"选择预设载荷\">\r\n          <el-select v-model=\"testForm.selectedVector\" placeholder=\"选择XSS载荷\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"vector in xssVectors\"\r\n              :key=\"vector.payload\"\r\n              :label=\"vector.name\"\r\n              :value=\"vector.payload\"\r\n            >\r\n              <span>{{ vector.name }}</span>\r\n              <span class=\"vector-type\">{{ vector.type }}</span>\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item v-if=\"testForm.inputType === 'manual'\" label=\"XSS载荷\">\r\n          <SafeInput\r\n            v-model=\"testForm.payload\"\r\n            placeholder=\"输入一个XSS载荷...\"\r\n            :sanitize=\"false\"\r\n            @xss-detected=\"handleXssDetected\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"防御设置\">\r\n          <el-checkbox v-model=\"testForm.defenseOptions.inputValidation\">输入验证</el-checkbox>\r\n          <el-checkbox v-model=\"testForm.defenseOptions.outputEncoding\">输出编码</el-checkbox>\r\n          <el-checkbox v-model=\"testForm.defenseOptions.csp\">内容安全策略</el-checkbox>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"runTest\" :loading=\"loading\">运行测试</el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <el-card v-if=\"testResult\" class=\"result-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>测试结果</h3>\r\n        </div>\r\n      </template>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"12\">\r\n          <div class=\"result-section\">\r\n            <h4>防御前 (原始输入)</h4>\r\n            <div class=\"danger-content\">\r\n              <pre>{{ testResult.originalPayload }}</pre>\r\n            </div>\r\n            <div class=\"render-container\">\r\n              <h5>渲染结果:</h5>\r\n              <div class=\"render-box\" v-html=\"testResult.originalPayload\"></div>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n\r\n        <el-col :span=\"12\">\r\n          <div class=\"result-section\">\r\n            <h4>防御后</h4>\r\n            <div class=\"safe-content\">\r\n              <pre>{{ testResult.sanitizedPayload }}</pre>\r\n            </div>\r\n            <div class=\"render-container\">\r\n              <h5>渲染结果:</h5>\r\n              <div class=\"render-box\" v-safe-html=\"testResult.sanitizedPayload\"></div>\r\n            </div>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-divider></el-divider>\r\n\r\n      <div class=\"analysis-section\">\r\n        <h4>攻击分析</h4>\r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"攻击类型\">{{ testResult.attackType }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"危险等级\">\r\n            <el-tag :type=\"getSeverityType(testResult.severity)\">{{ testResult.severity }}</el-tag>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"防御效果\">\r\n            <el-tag :type=\"testResult.prevented ? 'success' : 'danger'\">\r\n              {{ testResult.prevented ? '成功防御' : '防御失败' }}\r\n            </el-tag>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"分析说明\">{{ testResult.description }}</el-descriptions-item>\r\n        </el-descriptions>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport SafeInput from '../components/SafeInput.vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { xssVectors, analyzeXssSverity } from '../utils/xssUtils'\r\n\r\nconst store = useStore()\r\nconst loading = ref(false)\r\nconst testResult = ref(null)\r\n\r\n// 测试表单\r\nconst testForm = ref({\r\n  inputType: 'predefined',\r\n  selectedVector: '',\r\n  payload: '',\r\n  defenseOptions: {\r\n    inputValidation: true,\r\n    outputEncoding: true,\r\n    csp: true\r\n  }\r\n})\r\n\r\n// 监听选择的向量改变\r\nwatch(() => testForm.value.selectedVector, (newVal) => {\r\n  if (newVal) {\r\n    testForm.value.payload = newVal\r\n  }\r\n})\r\n\r\n// 处理XSS检测回调\r\nconst handleXssDetected = (payload) => {\r\n  console.log('XSS detected:', payload)\r\n  // 这里可以添加其他处理逻辑\r\n}\r\n\r\n// 运行测试\r\nconst runTest = async () => {\r\n  loading.value = true\r\n  testResult.value = null\r\n\r\n  const payload = testForm.value.inputType === 'predefined'\r\n    ? testForm.value.selectedVector\r\n    : testForm.value.payload\r\n\r\n  if (!payload) {\r\n    ElMessage.warning('请输入或选择XSS载荷')\r\n    loading.value = false\r\n    return\r\n  }\r\n\r\n  try {\r\n    // 调用真实的后端API\r\n    const response = await store.dispatch('runXssTest', {\r\n      input: payload,\r\n      defenseOptions: {\r\n        htmlEscape: testForm.value.defenseOptions.outputEncoding,\r\n        removeJsEvents: testForm.value.defenseOptions.inputValidation,\r\n        removeDangerousTags: testForm.value.defenseOptions.inputValidation\r\n      }\r\n    })\r\n    \r\n    if (response) {\r\n      testResult.value = {\r\n        originalPayload: response.input,\r\n        sanitizedPayload: response.sanitizedOutput,\r\n        attackType: response.attackType,\r\n        severity: response.severity,\r\n        prevented: response.prevented,\r\n        description: response.description\r\n      }\r\n      \r\n      // 刷新攻击日志数据\r\n      await store.dispatch('fetchAttackLogs')\r\n    }\r\n    \r\n    loading.value = false\r\n  } catch (error) {\r\n    console.error('Failed to run test:', error)\r\n    ElMessage.error('测试执行失败，请查看控制台日志')\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 重置表单\r\nconst resetForm = () => {\r\n  testForm.value = {\r\n    inputType: 'predefined',\r\n    selectedVector: '',\r\n    payload: '',\r\n    defenseOptions: {\r\n      inputValidation: true,\r\n      outputEncoding: true,\r\n      csp: true\r\n    }\r\n  }\r\n  testResult.value = null\r\n}\r\n\r\n// 辅助函数：获取危险等级对应的tag类型\r\nconst getSeverityType = (severity) => {\r\n  switch(severity) {\r\n    case 'high': return 'danger'\r\n    case 'medium': return 'warning'\r\n    default: return 'info'\r\n  }\r\n}\r\n\r\n// 辅助函数：确定攻击类型\r\nconst getAttackType = (payload) => {\r\n  if (payload.includes('<script')) {\r\n    return '脚本注入 (Reflected XSS)'\r\n  } else if (payload.includes('onerror') || payload.includes('onload')) {\r\n    return '事件处理注入 (DOM XSS)'\r\n  } else if (payload.includes('javascript:')) {\r\n    return 'JavaScript 伪协议 (DOM XSS)'\r\n  } else {\r\n    return '通用XSS攻击'\r\n  }\r\n}\r\n\r\n// 辅助函数：根据载荷生成说明\r\nconst getDescriptionForPayload = (payload, severity) => {\r\n  if (severity === 'high') {\r\n    return '此载荷尝试执行高危脚本，可能窃取cookie或执行恶意代码。'\r\n  } else if (severity === 'medium') {\r\n    return '此载荷尝试注入HTML或JavaScript代码，可能导致页面内容被篡改。'\r\n  } else {\r\n    return '此载荷包含潜在的XSS模式，但危险性较低。'\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.xss-test-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.xss-test-title {\r\n  margin-top: 20px;\r\n}\r\n\r\n.test-card, .result-card {\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.vector-type {\r\n  float: right;\r\n  color: #909399;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.result-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.render-container {\r\n  margin-top: 10px;\r\n}\r\n\r\n.render-box {\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  min-height: 100px;\r\n}\r\n\r\n.danger-content {\r\n  background-color: #fff9f9;\r\n  border: 1px solid #ffebeb;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  color: #f56c6c;\r\n}\r\n\r\n.safe-content {\r\n  background-color: #f0f9eb;\r\n  border: 1px solid #e1f3d8;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  color: #67c23a;\r\n}\r\n\r\n.analysis-section {\r\n  margin-top: 20px;\r\n}\r\n\r\npre {\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}